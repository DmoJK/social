{"version":3,"file":"static/js/915.0334dc03.chunk.js","mappings":"6LACA,GAAgB,UAAY,2BAA2B,MAAQ,uBAAuB,UAAY,4BCAlG,EAAuB,mB,SCavB,EAZa,SAACA,GACV,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKC,IAAI,iFACRH,EAAMI,SACP,0BACI,0BAAO,QAAUJ,EAAMK,iBAJF,MAQpC,E,8BC+BD,EApCoBC,EAAAA,MAAW,SAAAN,GAC7B,IAAIO,EAAgBP,EAAMQ,UACvBC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAMN,QAASM,EAAEN,QAASC,WAAYK,EAAEL,YAAiBK,EAAEC,GAA/D,IAER,OAAIX,EAAMY,SAQH,0BACL,SAAC,KAAD,CACEC,cAAe,CACbC,QAAS,IAEXC,iBAAkBC,EAAAA,GAClBC,SAAU,SAACC,EAAQC,GAAcnB,EAAMc,QAAQI,EAAOJ,SAAUK,EAAQC,WAAa,EALvF,SAOG,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAZ,OACC,iBAAKrB,UAAWC,EAAAA,UAAhB,WACE,sCACA,UAAC,KAAD,CAAMD,UAAWC,EAAAA,SAAjB,WACE,SAACqB,EAAA,EAAD,CAAgBC,YAAY,aAAaC,KAAK,UAAUC,KAAK,UAC7D,mBAAQC,UAAWN,IAAYC,EAAOI,KAAM,SAA5C,0BAEF,gBAAKzB,UAAWC,EAAAA,MAAhB,SACGK,MARN,OAfK,iBAAKN,UAAWC,EAAAA,UAAhB,WACR,mCACA,gBAAKD,UAAWC,EAAAA,MAAhB,SACGK,MA0BN,ICxCD,EAA0B,yB,SCA1B,GAAgB,iBAAmB,sCAAsC,gBAAkB,qCAAqC,SAAW,8BAA8B,KAAO,0BAA0B,YAAc,iCAAiC,SAAW,8BAA8B,MAAQ,2BAA2B,eAAiB,qC,UCyBtV,EAvBuB,SAACP,GACtB,OACE,iBAAKC,UAAWC,EAAAA,eAAhB,WACE,0BACE,gBAAKC,IAAKH,EAAM4B,UAAYC,OAE9B,yBACG7B,EAAMY,UAAW,kBAAOc,KAAK,OAAOI,SAAU9B,EAAM+B,gBAEvD,yBACG/B,EAAMY,QACLZ,EAAMgC,UACJ,mBAAQC,QAASjC,EAAMkC,eAAvB,4BACA,mBAAQD,QAASjC,EAAMmC,aAAvB,wBACA,OAOX,E,UCcD,EAhCwB,SAACnC,GACrB,OAAO,0BACH,SAAC,KAAD,CACIa,cAAe,CACXuB,SAAUpC,EAAMoC,SAChBC,QAASrC,EAAMqC,QAAUrC,EAAMqC,QAAU,GACzCC,eAAgBtC,EAAMsC,eAAiBtC,EAAMsC,eAAiB,GAC9DC,0BAA2BvC,EAAMuC,0BAA4BvC,EAAMuC,0BAA4B,GAC/FC,SAAUxC,EAAMwC,UAEpBvB,SAAU,SAACC,GAAalB,EAAMyC,cAAcvB,EAAS,EACrDH,iBAAkB2B,EAAAA,GATtB,SAWK,gBAAGrB,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOqB,EAAnB,EAAmBA,aAAnB,OACG,UAAC,KAAD,CAAM1C,UAAWC,EAAAA,gBAAjB,WACI,SAAC0C,EAAA,EAAD,CAAaC,MAAM,SAASpB,KAAK,WAAWC,KAAK,UACjD,SAACkB,EAAA,EAAD,CAAaC,MAAM,YAAYpB,KAAK,UAAUC,KAAK,UACnD,SAAC,IAAD,CAAgBmB,MAAM,mBAAmBpB,KAAK,iBAAiBC,KAAK,cACpE,SAACkB,EAAA,EAAD,CAAaC,MAAM,8BAA8BpB,KAAK,4BAA4BC,KAAK,UACvF,uCACA,gBAAKzB,UAAWC,EAAAA,SAAhB,SACK4C,OAAOC,KAAK/C,EAAMwC,UAAU/B,KAAI,SAAAuC,GAC7B,OAAO,SAACJ,EAAA,EAAD,CAAaC,MAAK,UAAKG,EAAL,MAAcvB,KAAM,YAAcuB,EAAKtB,KAAK,QAAYsB,EACpF,OAEL,mBAAQrB,UAAWN,IAAYC,GAASqB,EAAejB,KAAM,SAA7D,4BAZP,KAiBZ,ECOD,EAxC+B,SAAC1B,GAC5B,OAA8BiD,EAAAA,EAAAA,WAAS,GAAvC,eAAKjB,EAAL,KAAekB,EAAf,KAOA,GAA0BD,EAAAA,EAAAA,UAASjD,EAAMmD,QAAzC,eAAKA,EAAL,KAAaC,EAAb,KASA,OAJAC,EAAAA,EAAAA,YAAU,WACND,EAAUpD,EAAMmD,OACnB,GAAE,CAACnD,EAAMmD,SAELnD,EAAMY,SAOP,4BACMoB,IACE,gBAAK/B,UAAWC,EAAAA,YAAhB,UACI,iBAAMoD,cAzBD,WAAQJ,GAAY,EAAO,EAyBhC,SAAqClD,EAAMmD,QAAU,gBAG5DnB,IACG,0BACI,kBAAOuB,WAAW,EAAMC,OA7BjB,WACnBN,GAAY,GACZlD,EAAMyD,aAAaN,EACtB,EA0B+DrB,SAvBzC,SAAC4B,GACpBN,EAAUM,EAAEC,cAAcC,MAC7B,EAqByFA,MAAOT,UAdtF,gBAAKlD,UAAWC,EAAAA,OAAhB,UACH,0BAAOF,EAAMmD,QAAU,eAkBlC,ECfD,EAtBwB,SAACnD,GACvB,OACE,iBAAKC,UAAWC,EAAAA,gBAAhB,WACE,iBAAKD,UAAWC,EAAAA,KAAhB,WACE,gBAAKD,UAAWC,EAAAA,SAAhB,SAA6BF,EAAMoC,YACnC,SAAC,EAAD,CAAwBe,OAAQnD,EAAMmD,OAAQM,aAAczD,EAAMyD,aAAc7C,QAASZ,EAAMY,cAEjG,iBAAKX,UAAWC,EAAAA,MAAhB,sBACE,kCAAUF,EAAMqC,YAChB,yCAAiBrC,EAAMsC,eAAiB,sBAAwB,4BAChE,+CAAuBtC,EAAMuC,8BAC7B,uCACA,gBAAKtC,UAAWC,EAAAA,SAAhB,SACG4C,OAAOC,KAAK/C,EAAMwC,UAAU/B,KAAI,SAAAuC,GAC/B,OAAO,2BAAgBA,EAAhB,KAAuBhD,EAAMwC,SAASQ,KAA5BA,EAClB,WAKV,EC+BD,EA/CoB,SAAChD,GACnB,OAAgCiD,EAAAA,EAAAA,WAAS,GAAzC,eAAOjB,EAAP,KAAiBkB,EAAjB,KAOA,IAAKlD,EAAM6D,QACT,OAAO,SAACC,EAAA,EAAD,IAQT,OACE,iBAAK7D,UAAWC,EAAAA,iBAAhB,WACE,SAAC,EAAD,CAAgB0B,SAAU5B,EAAM6D,QAAQE,OAAOC,MAC7CpD,QAASZ,EAAMY,QACfmB,WAVa,SAAC2B,GACdA,EAAEO,OAAOC,MAAMC,QACjBnE,EAAMoE,YAAYV,EAAEO,OAAOC,MAAM,GAEpC,EAOK/B,aAnBe,WAAQe,GAAY,EAAO,EAoB1ChB,eAnBiB,WACrBgB,GAAY,EACb,EAkBKlB,SAAUA,IACXA,GACC,SAAC,EAAD,CAAiBI,SAAUpC,EAAM6D,QAAQzB,SACvCe,OAAQnD,EAAMmD,OACdM,aAAczD,EAAMyD,aACpBpB,QAASrC,EAAM6D,QAAQxB,QACvBC,eAAgBtC,EAAM6D,QAAQvB,eAC9BC,0BAA2BvC,EAAM6D,QAAQtB,0BACzCC,SAAUxC,EAAM6D,QAAQrB,SACxBC,cAAezC,EAAMyC,iBACvB,SAAC,EAAD,CAAiBL,SAAUpC,EAAM6D,QAAQzB,SACvCxB,QAASZ,EAAMY,QACfuC,OAAQnD,EAAMmD,OACdM,aAAczD,EAAMyD,aACpBpB,QAASrC,EAAM6D,QAAQxB,QACvBC,eAAgBtC,EAAM6D,QAAQvB,eAC9BC,0BAA2BvC,EAAM6D,QAAQtB,0BACzCC,SAAUxC,EAAM6D,QAAQrB,aAIjC,ECvCD,EATgB,SAACxC,GACf,OACE,iBAAKC,UAAWC,EAAhB,WACE,SAAC,EAAD,CAAa2D,QAAS7D,EAAM6D,QAASV,OAAQnD,EAAMmD,OAAQM,aAAczD,EAAMyD,aAAc7C,QAASZ,EAAMY,QAASwD,YAAapE,EAAMoE,YAAa3B,cAAezC,EAAMyC,iBAC1K,SAAC4B,EAAD,CAAazD,QAASZ,EAAMY,QAASE,QAASd,EAAMc,QAASN,UAAWR,EAAMQ,cAGnF,E,gDCXY8D,EAAqB,SAACC,GAC/B,OAAOA,EAAMC,YAAYX,OAC5B,EAEYY,EAAoB,SAACF,GAC9B,OAAOA,EAAMC,YAAYrB,MAC5B,EC6DD,OAAeuB,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAzBkB,SAACJ,GACnB,MAAO,CACHV,QAASS,EAAmBC,GAC5BpB,OAAQsB,EAAkBF,GAC1B5D,IAAIiE,EAAAA,EAAAA,IAAUL,GACd/D,UAAW+D,EAAMC,YAAYhE,UAEpC,GAkB4B,CAAEqE,WAAAA,EAAAA,GAAYC,UAAAA,EAAAA,GAAWrB,aAAAA,EAAAA,GAAcW,YAAAA,EAAAA,GAAa3B,cAAAA,EAAAA,GAAe3B,QAAAA,EAAAA,MAhBhG,SAAoBiE,GAYhB,OAXA,SAAiC/E,GAC7B,IAAIgF,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACb,OACI,SAACN,GAAD,kBACQ/E,GADR,IAEIsF,OAAQ,CAAEN,SAAAA,EAAUE,SAAAA,EAAUE,OAAAA,KAGzC,CAEJ,GAKGG,EAAAA,EAHJ,EAvDyB,SAACvF,GACtB,OAA4BiD,EAAAA,EAAAA,WAAS,GAArC,eAAKrC,EAAL,KAAc4E,EAAd,KAmBA,OAJAnC,EAAAA,EAAAA,YAAU,YAbU,WAChB,IAAIoC,EAASzF,EAAMsF,OAAOF,OAAOK,OACjCzF,EAAM6E,WAAWY,GACjBzF,EAAM8E,UAAUW,GAEZzF,EAAMsF,OAAOF,OAAOK,QAAUzF,EAAMW,GACpC6E,GAAW,GAGXA,GAAW,EAElB,CAGGE,EACH,GAAE,CAAC1F,EAAMsF,OAAOF,OAAOK,UAEjB,SAAC,GAAD,kBAAazF,GAAb,IACH6D,QAAS7D,EAAM6D,QACfV,OAAQnD,EAAMmD,OACdM,aAAczD,EAAMyD,aACpB7C,QAASA,EACTwD,YAAapE,EAAMoE,YACnB3B,cAAezC,EAAMyC,cACrB3B,QAASd,EAAMc,QACfN,UAAWR,EAAMQ,YACxB,G","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","webpack://my-app/./src/components/Profile/Profile.module.css?b512","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileInfoDescription/DescriptionImg.jsx","components/Profile/ProfileInfo/ProfileInfoDescription/DescriptionForm.jsx","components/Profile/ProfileInfo/ProfileInfoDescription/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileInfoDescription/DescriptionText.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","selectors/profile-selector.js","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"MyPosts_postBlock__dvM-z\",\"posts\":\"MyPosts_posts__GSiZ2\",\"postsArea\":\"MyPosts_postsArea__pw3q+\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import s from './Post.module.css'\n\nconst Post = (props) => {\n    return (\n        <div className={s.item} key={'key'}>\n            <img src=\"https://i.pinimg.com/originals/e1/56/e0/e156e0e6aada7374c783aab65f280026.jpg\" />\n            {props.message}\n            <div>\n                <span>{'like ' + props.likesCount}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;","import s from './MyPosts.module.css'\nimport Post from './Post/Post'\nimport React from 'react'\nimport { Form, Formik } from 'formik'\nimport CustomTextarea from '../../common/FormsControl/CustomTextarea'\nimport { myPostsValidation } from '../../../utilities/validators'\n\nconst MyPostsForm = React.memo(props => {\n  let postsElements = props.postsData\n    .map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />)\n\n  if(!props.isOwner) {\n    return  <div className={s.postBlock}>\n    <h3>Posts</h3>\n    <div className={s.posts}>\n      {postsElements}\n    </div>\n  </div>\n  }\n  return <div>\n    <Formik\n      initialValues={{\n        addPost: ''\n      }}\n      validationSchema={myPostsValidation}\n      onSubmit={(values, actions) => { props.addPost(values.addPost); actions.resetForm() }}\n    >\n      {({ isValid, dirty }) => (\n        <div className={s.postBlock}>\n          <h3>My posts</h3>\n          <Form className={s.postArea}>\n            <CustomTextarea placeholder=\"What's new\" name='addPost' type='text' />\n            <button disabled={!isValid || !dirty} type={'submit'}>Add post</button>\n          </Form>\n          <div className={s.posts}>\n            {postsElements}\n          </div>\n        </div>\n      )}\n    </Formik>\n  </div>\n})\n\nexport default MyPostsForm","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__VHbzQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"descriptionText\":\"ProfileInfo_descriptionText__O9emB\",\"fullName\":\"ProfileInfo_fullName__3fR7R\",\"main\":\"ProfileInfo_main__O3-Uw\",\"statusOwner\":\"ProfileInfo_statusOwner__iOliW\",\"contacts\":\"ProfileInfo_contacts__hKq1Z\",\"about\":\"ProfileInfo_about__n8Drc\",\"descriptionImg\":\"ProfileInfo_descriptionImg__QC9hc\"};","import s from '../ProfileInfo.module.css'\nimport img from '../../../../assets/images/avaDefault.jpeg'\n\nconst DescriptionImg = (props) => {\n  return (\n    <div className={s.descriptionImg}>\n      <div>\n        <img src={props.avaLarge || img} />\n      </div>\n      <div>\n        {props.isOwner && <input type='file' onChange={props.onNewPhoto} />}\n      </div>\n      <div>\n        {props.isOwner ?\n          props.editMode ?\n            <button onClick={props.deactivateMode} >Go to profile</button> :\n            <button onClick={props.activateMode} >Go to edit</button>\n          : ''\n\n        }\n      </div>\n\n    </div>\n  )\n}\n\nexport default DescriptionImg;","import s from '../ProfileInfo.module.css'\nimport { Form, Formik } from 'formik'\nimport CustomInput from '../../../common/FormsControl/CustomInput'\nimport CustomCheckbox from '../../../common/FormsControl/CustomInput'\nimport { profileValidation } from '../../../../utilities/validators'\n\nconst DescriptionForm = (props) => {\n    return <div>\n        <Formik\n            initialValues={{\n                fullName: props.fullName,\n                aboutMe: props.aboutMe ? props.aboutMe : '',\n                lookingForAJob: props.lookingForAJob ? props.lookingForAJob : '',\n                lookingForAJobDescription: props.lookingForAJobDescription ? props.lookingForAJobDescription : '',\n                contacts: props.contacts\n            }}\n            onSubmit={(values) => { props.updateProfile(values) }}\n            validationSchema={profileValidation}\n        >\n            {({ isValid, dirty, isSubmitting }) => (\n                <Form className={s.descriptionText}>\n                    <CustomInput label='Name: ' name='fullName' type='text' />\n                    <CustomInput label='AboutMe: ' name='aboutMe' type='text' />\n                    <CustomCheckbox label='lookingForAJob: ' name='lookingForAJob' type='checkbox' />\n                    <CustomInput label='lookingForAJobDescription: ' name='lookingForAJobDescription' type='text' />\n                    <div>Contacts</div>\n                    <div className={s.contacts}>\n                        {Object.keys(props.contacts).map(key => {\n                            return <CustomInput label={`${key}: `} name={\"contacts.\" + key} type='text' key={key} />\n                        })}\n                    </div>\n                    <button disabled={!isValid || !dirty || isSubmitting } type={'submit'} >Save changes</button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n}\n\nexport default DescriptionForm;","import React, { useEffect, useState } from 'react'\nimport s from '../ProfileInfo.module.css'\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false)\n    const activateMode = () => { setEditMode(true) }\n    const deactivateMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    let [status, setStatus] = useState(props.status)\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    if (!props.isOwner) {\n        return <div className={s.status}>\n            <span>{props.status || 'no status'}</span>\n        </div>\n    }\n\n    return (\n        <div>\n            {!editMode &&\n                <div className={s.statusOwner}>\n                    <span onDoubleClick={activateMode} >{props.status || 'no status'}</span>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input autoFocus={true} onBlur={deactivateMode} onChange={onStatusChange} value={status} />\n                </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks","import s from '../ProfileInfo.module.css'\nimport ProfileStatusWithHooks from './ProfileStatusHook';\n\nconst DescriptionText = (props) => {\n  return (\n    <div className={s.descriptionText}>\n      <div className={s.main}>\n        <div className={s.fullName}>{props.fullName}</div>\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} isOwner={props.isOwner} />\n      </div>\n      <div className={s.about}>About Me\n        <div>Me: {props.aboutMe}</div>\n        <div>About Job: {props.lookingForAJob ? \"Looking for a job: \" : \"Not looking for a job\"}</div>\n        <div>Job Description: {props.lookingForAJobDescription}</div>\n        <div>Contacts</div>\n        <div className={s.contacts}>\n          {Object.keys(props.contacts).map(key => {\n            return <div key={key}>{key}: {props.contacts[key]}</div>\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DescriptionText;","import Preloader from '../../common/Preloader/Preloader';\nimport s from './ProfileInfo.module.css'\nimport { useState } from 'react';\nimport DescriptionImg from './ProfileInfoDescription/DescriptionImg';\nimport DescriptionForm from './ProfileInfoDescription/DescriptionForm';\nimport DescriptionText from './ProfileInfoDescription/DescriptionText';\n\nconst ProfileInfo = (props) => {\n  const [editMode, setEditMode] = useState(false)\n\n  const activateMode = () => { setEditMode(true) }\n  const deactivateMode = () => {\n    setEditMode(false)\n  }\n\n  if (!props.profile) {\n    return <Preloader />\n  }\n  const onNewPhoto = (e) => {\n    if (e.target.files.length) {\n      props.updatePhoto(e.target.files[0])\n    }\n  }\n\n  return (\n    <div className={s.descriptionBlock}>\n      <DescriptionImg avaLarge={props.profile.photos.large}\n        isOwner={props.isOwner}\n        onNewPhoto={onNewPhoto}\n        activateMode={activateMode}\n        deactivateMode={deactivateMode}\n        editMode={editMode} />\n      {editMode ?\n        <DescriptionForm fullName={props.profile.fullName}\n          status={props.status}\n          updateStatus={props.updateStatus}\n          aboutMe={props.profile.aboutMe}\n          lookingForAJob={props.profile.lookingForAJob}\n          lookingForAJobDescription={props.profile.lookingForAJobDescription}\n          contacts={props.profile.contacts}\n          updateProfile={props.updateProfile} /> :\n        <DescriptionText fullName={props.profile.fullName}\n          isOwner={props.isOwner}\n          status={props.status}\n          updateStatus={props.updateStatus}\n          aboutMe={props.profile.aboutMe}\n          lookingForAJob={props.profile.lookingForAJob}\n          lookingForAJobDescription={props.profile.lookingForAJobDescription}\n          contacts={props.profile.contacts} />\n      }\n    </div>\n  );\n}\n\nexport default ProfileInfo;","import MyPostsForm from './MyPosts/MyPosts';\nimport s from './Profile.module.css'\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n  return (\n    <div className={s.profile}>\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} isOwner={props.isOwner} updatePhoto={props.updatePhoto} updateProfile={props.updateProfile} />\n      <MyPostsForm isOwner={props.isOwner} addPost={props.addPost} postsData={props.postsData} />\n    </div>\n  );\n}\n\nexport default Profile;","export const getProfileSelector = (state) => {\n    return state.profilePage.profile\n}\n\nexport const getStatusSelector = (state) => {\n    return state.profilePage.status\n}","import { connect } from \"react-redux\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { getProfile, getStatus, updateStatus, updatePhoto, updateProfile, addPost } from \"../../redux/profile-reducer\";\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { getUserId } from \"../../selectors/header-selector\";\nimport { getProfileSelector, getStatusSelector } from \"../../selectors/profile-selector\";\n\nconst ProfileContainer = (props) => {\n    let [isOwner, setIsOwner] = useState(false)\n\n    const loadProfile = () => {\n        let userId = props.router.params.userId\n        props.getProfile(userId)\n        props.getStatus(userId)\n\n        if (props.router.params.userId == props.id) {\n            setIsOwner(true)\n        }\n        else {\n            setIsOwner(false)\n        }\n    }\n\n    useEffect(() => {\n        loadProfile()\n    }, [props.router.params.userId])\n\n    return <Profile {...props}\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n        isOwner={isOwner}\n        updatePhoto={props.updatePhoto}\n        updateProfile={props.updateProfile}\n        addPost={props.addPost}\n        postsData={props.postsData} />\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: getProfileSelector(state),\n        status: getStatusSelector(state),\n        id: getUserId(state),\n        postsData: state.profilePage.postsData\n    }\n}\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n    return ComponentWithRouterProp;\n}\n\nexport default compose(\n    connect(mapStateToProps, { getProfile, getStatus, updateStatus, updatePhoto, updateProfile, addPost }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)"],"names":["props","className","s","src","message","likesCount","React","postsElements","postsData","map","p","id","isOwner","initialValues","addPost","validationSchema","myPostsValidation","onSubmit","values","actions","resetForm","isValid","dirty","CustomTextarea","placeholder","name","type","disabled","avaLarge","img","onChange","onNewPhoto","editMode","onClick","deactivateMode","activateMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","updateProfile","profileValidation","isSubmitting","CustomInput","label","Object","keys","key","useState","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","e","currentTarget","value","profile","Preloader","photos","large","target","files","length","updatePhoto","MyPosts","getProfileSelector","state","profilePage","getStatusSelector","compose","connect","getUserId","getProfile","getStatus","Component","location","useLocation","navigate","useNavigate","params","useParams","router","withAuthRedirect","setIsOwner","userId","loadProfile"],"sourceRoot":""}