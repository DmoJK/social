{"version":3,"file":"static/js/994.b5b1b563.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Pagination.jsx","webpack://my-app/./src/components/Users/Users.module.css?b9d0","components/Users/User.jsx","components/Users/Users.jsx","selectors/users-selector.js","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__CRNLp\",\"pages\":\"Paginator_pages__xZaO7\"};","import { useState } from 'react';\nimport s from './Paginator.module.css';\n\nconst Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize)\n    let [portionNumber, setPortionNumber] = useState(1)\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    let rightPortionPageNumber = portionNumber * portionSize\n\n    return <div>\n        <div className={s.pages}>\n            <span>{portionNumber > 1 && <button onClick={() => { setPortionNumber(portionNumber - 1) }} >Prev</button>}</span>\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map(p => {\n                    return <span key={p} className={currentPage === p ? s.selectedPage : undefined}\n                        onClick={(e) => { onPageChanged(p); }}>{p} </span>\n                })}\n            <span>{portionCount > portionNumber && <button onClick={() => { setPortionNumber(portionNumber + 1) }} >Next</button>}</span>\n        </div>\n    </div>\n};\n\nexport default Paginator;","// extracted by mini-css-extract-plugin\nexport default {\"ava\":\"Users_ava__D05iM\"};","import { NavLink } from 'react-router-dom';\nimport userPhoto from '../../assets/images/avaDefault.jpeg';\nimport s from './Users.module.css';\n\nlet User = ({ user, followingInProgress, unfollowThunkCreator, followThunkCreator }) => {\n    return (\n        <div>\n            <span>\n                <div className={s.ava}>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} />\n                    </NavLink>\n                </div>\n                <div>\n                    {user.followed ?\n                        <button disabled={followingInProgress.some(id => id === user.id)}\n                            onClick={() => {\n                                unfollowThunkCreator(user.id)\n                            }}>Unfollow</button> :\n                        <button disabled={followingInProgress.some(id => id === user.id)}\n                            onClick={() => {\n                                followThunkCreator(user.id)\n                            }}>Follow</button>}\n                </div>\n            </span>\n            <span>\n                <span>\n                    <div>{user.name}</div>\n                    <div>{user.status}</div>\n                </span>\n                <br />\n            </span>\n        </div>\n    )\n}\n\nexport default User;","import Paginator from '../common/Paginator/Pagination';\nimport User from './User';\n\nconst Users = ({ totalUserCount, pageSize, currentPage, onPageChanged, users, followingInProgress, unfollowThunkCreator, followThunkCreator }) => {\n    return <div>\n        <Paginator totalItemsCount={totalUserCount} pageSize={pageSize} currentPage={currentPage} onPageChanged={onPageChanged} />\n        <div>\n            {users.map(u => <User followingInProgress={followingInProgress}\n                    unfollowThunkCreator={unfollowThunkCreator}\n                    followThunkCreator={followThunkCreator}\n                    user={u} key={u.id} />)}\n        </div>\n    </div>\n};\n\nexport default Users;","import { createSelector } from 'reselect'\n\nexport const getUsers = (state) => {\n    return state.usersPage.users\n}\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n}\n\nexport const getUsersCount = (state) => {\n    return state.usersPage.totalUserCount\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching\n}\n\nexport const getFollowingProgress = (state) => {\n    return state.usersPage.followingInProgress\n}\n\n// export const selector = createSelector(getUsers, (users) => {\n//     return users.filter(u => true)\n// })","import { connect } from \"react-redux\";\nimport { toggleFollowingProgress, getUsersThunkCreator, changePageThunkCreator, unfollowThunkCreator, followThunkCreator } from \"../../redux/users-reducer\";\nimport React from 'react';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { getCurrentPage, getFollowingProgress, getIsFetching, getPageSize, getUsers, getUsersCount } from \"../../selectors/users-selector\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\n\n    }\n    onPageChanged = (pageNumber) => {\n        this.props.changePageThunkCreator(pageNumber, this.props.pageSize)\n    }\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader /> : null}\n            <Users users={this.props.users}\n                pageSize={this.props.pageSize}\n                totalUserCount={this.props.totalUserCount}\n                currentPage={this.props.currentPage}\n                onPageChanged={this.onPageChanged}\n                followingInProgress={this.props.followingInProgress}\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\n                unfollowThunkCreator={this.props.unfollowThunkCreator}\n                followThunkCreator={this.props.followThunkCreator}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUserCount: getUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingProgress(state)\n    }\n};\n\n\n\nexport default compose(\n    connect(mapStateToProps,\n        {toggleFollowingProgress, getUsersThunkCreator, changePageThunkCreator, unfollowThunkCreator, followThunkCreator}),\n    withAuthRedirect\n)(UsersContainer);\n\n\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setTotalUsersCount(totalCount))\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(currentPage())\n//         },\n//         follow: (userId) => {\n//             dispatch(follow(userId))\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollow(userId))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsers(users))\n//         },\n//         showMore: () => {\n//             dispatch(showMore())\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetching(isFetching))\n//         }\n//     }\n// };"],"names":["totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","onClick","filter","p","map","undefined","e","user","followingInProgress","unfollowThunkCreator","followThunkCreator","to","id","src","photos","small","userPhoto","followed","disabled","some","name","status","totalUserCount","users","u","getUsers","state","usersPage","getPageSize","getUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingProgress","UsersContainer","pageNumber","props","changePageThunkCreator","this","getUsersThunkCreator","Preloader","toggleFollowingProgress","React","compose","connect","withAuthRedirect"],"sourceRoot":""}