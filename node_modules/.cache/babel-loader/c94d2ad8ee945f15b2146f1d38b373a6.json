{"ast":null,"code":"var _jsxFileName = \"/Users/artemparhomenko/my-app/src/components/Profile/ProfileContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { getProfile, getStatus, updateStatus, updatePhoto } from \"../../redux/profile-reducer\";\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { getUserId } from \"../../selectors/header-selector\";\nimport { getProfileSelector, getStatusSelector } from \"../../selectors/profile-selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileContainer = props => {\n  _s();\n\n  let [isOwner, setIsOwner] = useState(false);\n\n  const loadProfile = () => {\n    let userId = props.router.params.userId;\n    props.getProfile(userId);\n    props.getStatus(userId);\n\n    if (props.router.params.userId == props.id) {\n      setIsOwner(true);\n    } else {\n      setIsOwner(false);\n    }\n  };\n\n  useEffect(() => {\n    loadProfile();\n  }, [props.router.params.userId]);\n  return /*#__PURE__*/_jsxDEV(Profile, { ...props,\n    profile: props.profile,\n    status: props.status,\n    updateStatus: props.updateStatus,\n    isOwner: isOwner,\n    updatePhoto: props.updatePhoto\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProfileContainer, \"UmL7JwkLC3CC0hkAvlTF4PWxBeU=\");\n\n_c = ProfileContainer;\n\nlet mapStateToProps = state => {\n  return {\n    profile: getProfileSelector(state),\n    status: getStatusSelector(state),\n    id: getUserId(state)\n  };\n};\n\nfunction withRouter(Component) {\n  var _s2 = $RefreshSig$();\n\n  function ComponentWithRouterProp(props) {\n    _s2();\n\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s2(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n\n  return ComponentWithRouterProp;\n}\n\nexport default compose(connect(mapStateToProps, {\n  getProfile,\n  getStatus,\n  updateStatus,\n  updatePhoto\n}), withRouter, withAuthRedirect)(ProfileContainer);\n\nclass ProfileCOntainer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      owner: false\n    };\n  }\n\n  isOwner() {\n    if (this.props.router.params.userId == this.props.Id) {\n      this.setState({\n        owner: true\n      });\n    } else {\n      this.setState({\n        owner: false\n      });\n    }\n  }\n\n  loadProfile() {\n    let userId = this.props.router.params.userId;\n    this.props.getProfile(userId);\n    this.props.getStatus(userId);\n    this.isOwner();\n  }\n\n  componentDidMount() {\n    this.loadProfile();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.router.params.userId !== this.props.router.params.userId) {\n      this.loadProfile();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      isOwner: this.state.owner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileContainer\");","map":{"version":3,"names":["connect","React","Profile","getProfile","getStatus","updateStatus","updatePhoto","useLocation","useNavigate","useParams","withAuthRedirect","compose","useEffect","useState","getUserId","getProfileSelector","getStatusSelector","ProfileContainer","props","isOwner","setIsOwner","loadProfile","userId","router","params","id","profile","status","mapStateToProps","state","withRouter","Component","ComponentWithRouterProp","location","navigate","ProfileCOntainer","owner","Id","setState","componentDidMount","componentDidUpdate","prevProps","render"],"sources":["/Users/artemparhomenko/my-app/src/components/Profile/ProfileContainer.jsx"],"sourcesContent":["import { connect } from \"react-redux\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { getProfile, getStatus, updateStatus, updatePhoto } from \"../../redux/profile-reducer\";\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { getUserId } from \"../../selectors/header-selector\";\nimport { getProfileSelector, getStatusSelector } from \"../../selectors/profile-selector\";\n\nconst ProfileContainer = (props) => {\n    let [isOwner, setIsOwner] = useState(false)\n\n    const loadProfile = () => {\n        let userId = props.router.params.userId\n        props.getProfile(userId)\n        props.getStatus(userId)\n\n        if (props.router.params.userId == props.id) {\n            setIsOwner(true)\n        }\n        else {\n            setIsOwner(false)\n        }\n    }\n\n    useEffect(() => {\n        loadProfile()\n    }, [props.router.params.userId])\n\n    return <Profile {...props} profile={props.profile} status={props.status} updateStatus={props.updateStatus} isOwner={isOwner} updatePhoto={props.updatePhoto} />\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: getProfileSelector(state),\n        status: getStatusSelector(state),\n        id: getUserId(state)\n    }\n}\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n    return ComponentWithRouterProp;\n}\n\nexport default compose(\n    connect(mapStateToProps, { getProfile, getStatus, updateStatus, updatePhoto }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)\n\n\n\n\n\n\n\n\n\n\n\n\nclass ProfileCOntainer extends React.Component {\n    state = {\n        owner: false\n    }\n\n    isOwner() {\n        if (this.props.router.params.userId == this.props.Id) {\n            this.setState({\n                owner: true\n            })\n        }\n        else {\n            this.setState({\n                owner: false\n            })\n        }\n    }\n\n    loadProfile() {\n        let userId = this.props.router.params.userId\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n        this.isOwner()\n    }\n\n    componentDidMount() {\n        this.loadProfile()\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.router.params.userId !== this.props.router.params.userId) {\n            this.loadProfile()\n        }\n    }\n    render() {\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} isOwner={this.state.owner} />;\n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}