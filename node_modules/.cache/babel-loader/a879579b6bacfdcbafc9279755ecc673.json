{"ast":null,"code":"var _jsxFileName = \"/Users/artemparhomenko/my-app/src/components/Profile/MyPosts/MyPosts.jsx\";\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport React from 'react';\nimport { Form, Formik } from 'formik';\nimport CustomTextarea from '../../common/FormsControl/CustomTextarea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPostsForm = /*#__PURE__*/React.memo(_c = props => {\n  let postsElements = props.postsData.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    message: p.message,\n    likesCount: p.likesCount\n  }, p.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 15\n  }, this));\n\n  const validate = values => {\n    const errors = {};\n\n    if (values.firstName.length > 15) {\n      errors.firstName = 'Must be 15 characters or less';\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        addPost: ''\n      },\n      validate: validate,\n      onSubmit: (values, actions) => {\n        props.addPost(values.addPost);\n        actions.resetForm();\n      },\n      children: _ref => {\n        let {\n          isValid,\n          dirty\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.postBlock,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"My posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: s.postArea,\n            children: [/*#__PURE__*/_jsxDEV(CustomTextarea, {\n              placeholder: \"What's new\",\n              name: \"addPost\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: !isValid || !dirty,\n              type: 'submit',\n              children: \"Add post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.posts,\n            children: postsElements\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n});\n_c2 = MyPostsForm;\nexport default MyPostsForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyPostsForm$React.memo\");\n$RefreshReg$(_c2, \"MyPostsForm\");","map":{"version":3,"names":["s","Post","React","Form","Formik","CustomTextarea","MyPostsForm","memo","props","postsElements","postsData","map","p","message","likesCount","id","validate","values","errors","firstName","length","addPost","actions","resetForm","isValid","dirty","postBlock","postArea","posts"],"sources":["/Users/artemparhomenko/my-app/src/components/Profile/MyPosts/MyPosts.jsx"],"sourcesContent":["import s from './MyPosts.module.css'\nimport Post from './Post/Post'\nimport React from 'react'\nimport { Form, Formik } from 'formik'\nimport CustomTextarea from '../../common/FormsControl/CustomTextarea'\n\n\nconst MyPostsForm = React.memo(props => {\n  let postsElements = props.postsData\n    .map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />)\n\n  const validate = values => {\n    const errors = {};\n    if (values.firstName.length > 15) {\n      errors.firstName = 'Must be 15 characters or less';\n    }\n    return errors;\n  };\n\n  return <div>\n    <Formik\n      initialValues={{\n        addPost: ''\n      }}\n      validate={validate}\n      onSubmit={(values, actions) => { props.addPost(values.addPost); actions.resetForm() }}\n    >\n      {({ isValid, dirty }) => (\n        <div className={s.postBlock}>\n          <h3>My posts</h3>\n          <Form className={s.postArea}>\n            <CustomTextarea placeholder=\"What's new\" name='addPost' type='text' />\n            <button disabled={!isValid || !dirty} type={'submit'}>Add post</button>\n          </Form>\n          <div className={s.posts}>\n            {postsElements}\n          </div>\n        </div>\n      )}\n    </Formik>\n  </div>\n})\n\nexport default MyPostsForm"],"mappings":";AAAA,OAAOA,CAAP,MAAc,sBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;;AAGA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,IAAN,MAAWC,KAAK,IAAI;EACtC,IAAIC,aAAa,GAAGD,KAAK,CAACE,SAAN,CACjBC,GADiB,CACbC,CAAC,iBAAI,QAAC,IAAD;IAAM,OAAO,EAAEA,CAAC,CAACC,OAAjB;IAA0B,UAAU,EAAED,CAAC,CAACE;EAAxC,GAAyDF,CAAC,CAACG,EAA3D;IAAA;IAAA;IAAA;EAAA,QADQ,CAApB;;EAGA,MAAMC,QAAQ,GAAGC,MAAM,IAAI;IACzB,MAAMC,MAAM,GAAG,EAAf;;IACA,IAAID,MAAM,CAACE,SAAP,CAAiBC,MAAjB,GAA0B,EAA9B,EAAkC;MAChCF,MAAM,CAACC,SAAP,GAAmB,+BAAnB;IACD;;IACD,OAAOD,MAAP;EACD,CAND;;EAQA,oBAAO;IAAA,uBACL,QAAC,MAAD;MACE,aAAa,EAAE;QACbG,OAAO,EAAE;MADI,CADjB;MAIE,QAAQ,EAAEL,QAJZ;MAKE,QAAQ,EAAE,CAACC,MAAD,EAASK,OAAT,KAAqB;QAAEd,KAAK,CAACa,OAAN,CAAcJ,MAAM,CAACI,OAArB;QAA+BC,OAAO,CAACC,SAAR;MAAqB,CALvF;MAAA,UAOG;QAAA,IAAC;UAAEC,OAAF;UAAWC;QAAX,CAAD;QAAA,oBACC;UAAK,SAAS,EAAEzB,CAAC,CAAC0B,SAAlB;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,IAAD;YAAM,SAAS,EAAE1B,CAAC,CAAC2B,QAAnB;YAAA,wBACE,QAAC,cAAD;cAAgB,WAAW,EAAC,YAA5B;cAAyC,IAAI,EAAC,SAA9C;cAAwD,IAAI,EAAC;YAA7D;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAQ,QAAQ,EAAE,CAACH,OAAD,IAAY,CAACC,KAA/B;cAAsC,IAAI,EAAE,QAA5C;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAME;YAAK,SAAS,EAAEzB,CAAC,CAAC4B,KAAlB;YAAA,UACGnB;UADH;YAAA;YAAA;YAAA;UAAA,QANF;QAAA;UAAA;UAAA;UAAA;QAAA,QADD;MAAA;IAPH;MAAA;MAAA;MAAA;IAAA;EADK;IAAA;IAAA;IAAA;EAAA,QAAP;AAsBD,CAlCmB,CAApB;MAAMH,W;AAoCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}