{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  withCredentials: true,\n  headers: {\n    \"API-KEY\": \"0f06b5ba-321d-4f03-b585-06a627d78d00\"\n  }\n});\nexport const usersAPI = {\n  getUsers: async function (currentPage) {\n    let pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n    const response = await instance.get(`users?page=${currentPage}&count=${pageSize}`);\n    return response.data;\n  },\n  unfollow: async id => {\n    const response = await instance.delete(`follow/${id}`);\n    return response.data;\n  },\n  follow: async id => {\n    const response = await instance.post(`follow/${id}`);\n    return response.data;\n  }\n};\nexport const profileAPI = {\n  getProfile: async id => {\n    const response = await instance.get(`profile/${id}`);\n    return response.data;\n  },\n  getStatus: async id => {\n    const response = await instance.get(`/profile/status/${id}`);\n    return response.data;\n  },\n  updateStatus: status => {\n    return instance.put(`/profile/status`, {\n      status: status\n    });\n  },\n  updatePhoto: image => {\n    let formData = new FormData();\n    formData.append('image', image);\n    return instance.put(`/profile/photo`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  updateProfile: description => {\n    return instance.put(`/profile`, description);\n  }\n};\nexport const authAPI = {\n  login: function (email, password) {\n    let rememberMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let captcha = arguments.length > 3 ? arguments[3] : undefined;\n    return instance.post(`/auth/login`, {\n      email,\n      password,\n      rememberMe,\n      captcha\n    });\n  },\n  logout: () => {\n    return instance.delete(`/auth/login`);\n  },\n  getYourProfile: async () => {\n    const response = await instance.get(`auth/me`);\n    return response.data;\n  },\n  getCaptcha: async () => {\n    const response = await instance.get(`/security/get-captcha-url`);\n    return response.data;\n  }\n};","map":{"version":3,"names":["axios","instance","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","response","get","data","unfollow","id","delete","follow","post","profileAPI","getProfile","getStatus","updateStatus","status","put","updatePhoto","image","formData","FormData","append","updateProfile","description","authAPI","login","email","password","rememberMe","captcha","logout","getYourProfile","getCaptcha"],"sources":["/Users/artemparhomenko/my-app/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    withCredentials: true,\n    headers: { \"API-KEY\": \"0f06b5ba-321d-4f03-b585-06a627d78d00\" }\n})\n\nexport const usersAPI = {\n    getUsers: async (currentPage, pageSize = 5) => {\n        const response = await instance.get(`users?page=${currentPage}&count=${pageSize}`)\n        return response.data\n    },\n    unfollow: async (id) => {\n        const response = await instance.delete(`follow/${id}`)\n        return response.data\n    },\n    follow: async (id) => {\n        const response = await instance.post(`follow/${id}`)\n        return response.data\n    }\n}\n\nexport const profileAPI = {\n    getProfile: async (id) => {\n        const response = await instance.get(`profile/${id}`)\n        return response.data\n    },\n    getStatus: async (id) => {\n        const response = await instance.get(`/profile/status/${id}`)\n        return response.data\n    },\n    updateStatus: (status) => {\n        return instance.put(`/profile/status`,\n            { status: status })\n    },\n    updatePhoto: (image) => {\n        let formData = new FormData()\n        formData.append('image', image)\n        return instance.put(`/profile/photo`,\n            formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    updateProfile: (description) => {\n        return instance.put(`/profile`, description)\n    }\n}\n\nexport const authAPI = {\n    login: (email, password, rememberMe = false, captcha) => {\n        return instance.post(`/auth/login`,\n            { email, password, rememberMe, captcha }\n        )\n    },\n    logout: () => {\n        return instance.delete(`/auth/login`,)\n    },\n    getYourProfile: async () => {\n        const response = await instance.get(`auth/me`)\n        return response.data\n    },\n    getCaptcha: async () => {\n        const response = await instance.get(`/security/get-captcha-url`)\n        return response.data\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}