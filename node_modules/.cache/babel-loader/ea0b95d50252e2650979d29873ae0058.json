{"ast":null,"code":"var _jsxFileName = \"/Users/artemparhomenko/my-app/src/components/Profile/ProfileContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { getProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      owner: false\n    };\n  }\n\n  isOwner() {\n    if (this.props.router.params.userId == this.props.Id) {\n      this.setState({\n        owner: true\n      });\n    } else {\n      this.setState({\n        owner: false\n      });\n    }\n  }\n\n  loadProfile() {\n    let userId = this.props.router.params.userId;\n    this.props.getProfile(userId);\n    this.props.getStatus(userId);\n    this.isOwner();\n  }\n\n  componentDidMount() {\n    this.loadProfile();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.router.params.userId !== this.props.router.params.userId) {\n      this.loadProfile();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      isOwner: this.state.owner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst ProfileCOntainer = props => {\n  _s();\n\n  let [isOwner, setIsOwner] = useState(false);\n\n  const loadProfile = () => {\n    let userId = props.router.params.userId;\n    props.getProfile(userId);\n    props.getStatus(userId);\n\n    if (props.router.params.userId == props.Id) {\n      setIsOwner(true);\n    } else {\n      setIsOwner(false);\n    }\n  };\n\n  useEffect(() => {\n    loadProfile();\n  }, [props.router.params.userId]);\n  useEffect(() => {\n    loadProfile();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n    profile: this.props.profile,\n    status: this.props.status,\n    updateStatus: this.props.updateStatus,\n    isOwner: isOwner\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProfileCOntainer, \"TTV2cZs0FWrkxgXkHfMNN16JDLc=\");\n\n_c = ProfileCOntainer;\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    Id: state.auth.id\n  };\n};\n\nfunction withRouter(Component) {\n  var _s2 = $RefreshSig$();\n\n  function ComponentWithRouterProp(props) {\n    _s2();\n\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s2(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n\n  return ComponentWithRouterProp;\n}\n\nexport default compose(connect(mapStateToProps, {\n  getProfile,\n  getStatus,\n  updateStatus\n}), withRouter, withAuthRedirect)(ProfileCOntainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileCOntainer\");","map":{"version":3,"names":["connect","React","Profile","getProfile","getStatus","updateStatus","useLocation","useNavigate","useParams","withAuthRedirect","compose","useEffect","useState","ProfileContainer","Component","state","owner","isOwner","props","router","params","userId","Id","setState","loadProfile","componentDidMount","componentDidUpdate","prevProps","render","profile","status","ProfileCOntainer","setIsOwner","mapStateToProps","profilePage","auth","id","withRouter","ComponentWithRouterProp","location","navigate"],"sources":["/Users/artemparhomenko/my-app/src/components/Profile/ProfileContainer.jsx"],"sourcesContent":["import { connect } from \"react-redux\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { getProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nclass ProfileContainer extends React.Component {\n    state = {\n        owner: false\n    }\n\n    isOwner() {\n        if (this.props.router.params.userId == this.props.Id) {\n            this.setState({\n                owner: true\n            })\n        }\n        else {\n            this.setState({\n                owner: false\n            })\n        }\n    }\n\n    loadProfile() {\n        let userId = this.props.router.params.userId\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n        this.isOwner()\n    }\n\n    componentDidMount() {\n        this.loadProfile()\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.router.params.userId !== this.props.router.params.userId) {\n            this.loadProfile()\n        }\n    }\n    render() {\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} isOwner={this.state.owner} />;\n    }\n}\n\n\n\n\nconst ProfileCOntainer = (props) => {\n    let [isOwner, setIsOwner] = useState(false)\n\n    const loadProfile = () => {\n        let userId = props.router.params.userId\n        props.getProfile(userId)\n        props.getStatus(userId)\n\n        if (props.router.params.userId == props.Id) {\n            setIsOwner(true)\n        }\n        else {\n            setIsOwner(false)\n        }\n    }\n\n    useEffect(() => {\n        loadProfile()\n    }, [props.router.params.userId])\n\n    useEffect(() => {\n        loadProfile()\n    }, [])\n\n    return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} isOwner={isOwner} />\n}\n\n\n\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        Id: state.auth.id\n    }\n}\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n    return ComponentWithRouterProp;\n}\n\nexport default compose(\n    connect(mapStateToProps, { getProfile, getStatus, updateStatus }),\n    withRouter,\n    withAuthRedirect\n)(ProfileCOntainer)"],"mappings":"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"},"metadata":{},"sourceType":"module"}