{"ast":null,"code":"import { authAPI } from \"../api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isFetching: false,\n  isAuth: false\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.data,\n        isAuth: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserData = (id, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    id,\n    email,\n    login\n  }\n});\nexport const getYourProfile = () => dispatch => {\n  authAPI.getYourProfile().then(response => {\n    if (response.resultCode === 0) {\n      let {\n        id,\n        email,\n        login\n      } = response.data;\n      dispatch(setUserData(id, email, login));\n    }\n  });\n};\nexport const login = (email, password, rememberMe) => dispatch => {\n  authAPI.login(email, password, rememberMe).then(response => {});\n};\nexport default authReducer;","map":{"version":3,"names":["authAPI","SET_USER_DATA","initialState","id","email","login","isFetching","isAuth","authReducer","state","action","type","data","setUserData","getYourProfile","dispatch","then","response","resultCode","password","rememberMe"],"sources":["/Users/artemparhomenko/my-app/src/redux/auth-reducer.js"],"sourcesContent":["import { authAPI } from \"../api/api\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isFetching: false,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n            };\n        default:\n            return state;\n    }\n}\n\n\nexport const setUserData = (id, email, login) => ({ type: SET_USER_DATA, data: { id, email, login } })\n\nexport const getYourProfile = () => (dispatch) => {\n    authAPI.getYourProfile()\n        .then(response => {\n            if (response.resultCode === 0) {\n                let { id, email, login } = response.data\n                dispatch(setUserData(id, email, login))\n            }\n        })\n}\n\nexport const login = (email, password, rememberMe) => (dispatch) => {\n    authAPI.login(email, password, rememberMe)\n        .then(response => {\n\n        })\n}\nexport default authReducer;"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;EACfC,EAAE,EAAE,IADW;EAEfC,KAAK,EAAE,IAFQ;EAGfC,KAAK,EAAE,IAHQ;EAIfC,UAAU,EAAE,KAJG;EAKfC,MAAM,EAAE;AALO,CAAnB;;AAQA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBP,YAAyB;EAAA,IAAXQ,MAAW;;EAClD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKV,aAAL;MACI,OAAO,EACH,GAAGQ,KADA;QAEH,GAAGC,MAAM,CAACE,IAFP;QAGHL,MAAM,EAAE;MAHL,CAAP;;IAKJ;MACI,OAAOE,KAAP;EARR;AAUH,CAXD;;AAcA,OAAO,MAAMI,WAAW,GAAG,CAACV,EAAD,EAAKC,KAAL,EAAYC,KAAZ,MAAuB;EAAEM,IAAI,EAAEV,aAAR;EAAuBW,IAAI,EAAE;IAAET,EAAF;IAAMC,KAAN;IAAaC;EAAb;AAA7B,CAAvB,CAApB;AAEP,OAAO,MAAMS,cAAc,GAAG,MAAOC,QAAD,IAAc;EAC9Cf,OAAO,CAACc,cAAR,GACKE,IADL,CACUC,QAAQ,IAAI;IACd,IAAIA,QAAQ,CAACC,UAAT,KAAwB,CAA5B,EAA+B;MAC3B,IAAI;QAAEf,EAAF;QAAMC,KAAN;QAAaC;MAAb,IAAuBY,QAAQ,CAACL,IAApC;MACAG,QAAQ,CAACF,WAAW,CAACV,EAAD,EAAKC,KAAL,EAAYC,KAAZ,CAAZ,CAAR;IACH;EACJ,CANL;AAOH,CARM;AAUP,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAD,EAAQe,QAAR,EAAkBC,UAAlB,KAAkCL,QAAD,IAAc;EAChEf,OAAO,CAACK,KAAR,CAAcD,KAAd,EAAqBe,QAArB,EAA+BC,UAA/B,EACKJ,IADL,CACUC,QAAQ,IAAI,CAEjB,CAHL;AAIH,CALM;AAMP,eAAeT,WAAf"},"metadata":{},"sourceType":"module"}