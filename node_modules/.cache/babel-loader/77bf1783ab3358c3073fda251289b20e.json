{"ast":null,"code":"var _jsxFileName = \"/Users/artemparhomenko/my-app/src/components/common/Paginator/Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport s from './Paginator.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Paginator = _ref => {\n  _s();\n\n  let {\n    totalItemsCount,\n    pageSize,\n    currentPage,\n    onPageChanged,\n    portionSize = 10\n  } = _ref;\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.pages,\n      children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setPortionNumber(portionNumber - 1);\n        },\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 35\n      }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: currentPage === p && s.selectedPage,\n          onClick: e => {\n            onPageChanged(p);\n          },\n          children: p\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 28\n        }, this);\n      }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setPortionNumber(portionNumber + 1);\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"names":["s","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","useState","leftPortionPageNumber","rightPortionPageNumber","filter","p","map","selectedPage","e"],"sources":["/Users/artemparhomenko/my-app/src/components/common/Paginator/Pagination.jsx"],"sourcesContent":["import s from './Paginator.module.css';\n\nconst Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize)\n    let [portionNumber, setPortionNumber] = useState(1)\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    let rightPortionPageNumber = portionNumber * portionSize\n\n    return <div>\n        <div className={s.pages}>\n            {portionNumber > 1 && <button onClick={() => { setPortionNumber(portionNumber - 1) }} >Prev</button>}\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map(p => {\n                    return <span className={currentPage === p && s.selectedPage}\n                        onClick={(e) => { onPageChanged(p); }}>{p}</span>\n                })}\n            {portionCount > portionNumber && <button onClick={() => { setPortionNumber(portionNumber + 1) }} >Next</button>}\n        </div>\n    </div>\n};\n\nexport default Paginator;"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,wBAAd;;;AAEA,MAAMC,SAAS,GAAG,QAAiF;EAAA;;EAAA,IAAhF;IAAEC,eAAF;IAAmBC,QAAnB;IAA6BC,WAA7B;IAA0CC,aAA1C;IAAyDC,WAAW,GAAG;EAAvE,CAAgF;EAC/F,IAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;EAEA,IAAIO,KAAK,GAAG,EAAZ;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;IAClCD,KAAK,CAACE,IAAN,CAAWD,CAAX;EACH;;EAED,IAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;EACA,IAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCC,QAAQ,CAAC,CAAD,CAAhD;EACA,IAAIC,qBAAqB,GAAG,CAACH,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;EACA,IAAIY,sBAAsB,GAAGJ,aAAa,GAAGR,WAA7C;EAEA,oBAAO;IAAA,uBACH;MAAK,SAAS,EAAEN,CAAC,CAACU,KAAlB;MAAA,WACKI,aAAa,GAAG,CAAhB,iBAAqB;QAAQ,OAAO,EAAE,MAAM;UAAEC,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;QAAqC,CAA9D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAD1B,EAEKJ,KAAK,CACDS,MADJ,CACWC,CAAC,IAAIA,CAAC,IAAIH,qBAAL,IAA8BG,CAAC,IAAIF,sBADnD,EAEIG,GAFJ,CAEQD,CAAC,IAAI;QACN,oBAAO;UAAM,SAAS,EAAEhB,WAAW,KAAKgB,CAAhB,IAAqBpB,CAAC,CAACsB,YAAxC;UACH,OAAO,EAAGC,CAAD,IAAO;YAAElB,aAAa,CAACe,CAAD,CAAb;UAAmB,CADlC;UAAA,UACqCA;QADrC;UAAA;UAAA;UAAA;QAAA,QAAP;MAEH,CALJ,CAFL,EAQKP,YAAY,GAAGC,aAAf,iBAAgC;QAAQ,OAAO,EAAE,MAAM;UAAEC,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;QAAqC,CAA9D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARrC;IAAA;MAAA;MAAA;MAAA;IAAA;EADG;IAAA;IAAA;IAAA;EAAA,QAAP;AAYH,CAzBD;;GAAMb,S;;KAAAA,S;AA2BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}