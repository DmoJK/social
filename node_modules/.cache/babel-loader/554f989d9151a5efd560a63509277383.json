{"ast":null,"code":"import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_IS_OWNER = 'SET_IS_OWNER';\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isFetching: false,\n  isAuth: false,\n  isOwner: false\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.payload\n      };\n\n    case SET_IS_OWNER:\n      if (state.id === action.userId) {\n        debugger;\n        return { ...state,\n          isOwner: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserData = (id, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    id,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const setIsOwner = userId => ({\n  type: SET_IS_OWNER,\n  userId\n});\nexport const getYourProfile = () => async dispatch => {\n  let response = await authAPI.getYourProfile();\n\n  if (response.resultCode === 0) {\n    let {\n      id,\n      email,\n      login\n    } = response.data;\n    dispatch(setUserData(id, email, login, true));\n  }\n};\nexport const login = (email, password, rememberMe) => async dispatch => {\n  let response = await authAPI.login(email, password, rememberMe);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getYourProfile());\n  } else {\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\n    dispatch(stopSubmit('Login', {\n      _error: message\n    }));\n  }\n};\nexport const logout = () => async dispatch => {\n  let response = await authAPI.logout();\n\n  if (response.data.resultCode === 0) {\n    dispatch(setUserData(null, null, null, false));\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["stopSubmit","authAPI","SET_USER_DATA","SET_IS_OWNER","initialState","id","email","login","isFetching","isAuth","isOwner","authReducer","state","action","type","payload","userId","setUserData","setIsOwner","getYourProfile","dispatch","response","resultCode","data","password","rememberMe","message","messages","length","_error","logout"],"sources":["/Users/artemparhomenko/my-app/src/redux/auth-reducer.js"],"sourcesContent":["import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../api/api\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_IS_OWNER = 'SET_IS_OWNER'\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isFetching: false,\n    isAuth: false,\n    isOwner: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            };\n        case SET_IS_OWNER:\n            if (state.id === action.userId) {\n                debugger;\n                return {\n                    ...state,\n                    isOwner: true\n                }\n            }\n        default:\n            return state;\n    }\n}\n\nexport const setUserData = (id, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { id, email, login, isAuth } })\nexport const setIsOwner = (userId) => ({ type: SET_IS_OWNER, userId })\n\nexport const getYourProfile = () => async (dispatch) => {\n    let response = await authAPI.getYourProfile()\n    if (response.resultCode === 0) {\n        let { id, email, login } = response.data\n        dispatch(setUserData(id, email, login, true))\n    }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe)\n    if (response.data.resultCode === 0) {\n        dispatch(getYourProfile())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error'\n        dispatch(stopSubmit('Login', { _error: message }))\n    }\n\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout()\n    if (response.data.resultCode === 0) {\n        dispatch(setUserData(null, null, null, false))\n    }\n\n}\n\nexport default authReducer;"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,IAAIC,YAAY,GAAG;EACfC,EAAE,EAAE,IADW;EAEfC,KAAK,EAAE,IAFQ;EAGfC,KAAK,EAAE,IAHQ;EAIfC,UAAU,EAAE,KAJG;EAKfC,MAAM,EAAE,KALO;EAMfC,OAAO,EAAE;AANM,CAAnB;;AASA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBR,YAAyB;EAAA,IAAXS,MAAW;;EAClD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKZ,aAAL;MACI,OAAO,EACH,GAAGU,KADA;QAEH,GAAGC,MAAM,CAACE;MAFP,CAAP;;IAIJ,KAAKZ,YAAL;MACI,IAAIS,KAAK,CAACP,EAAN,KAAaQ,MAAM,CAACG,MAAxB,EAAgC;QAC5B;QACA,OAAO,EACH,GAAGJ,KADA;UAEHF,OAAO,EAAE;QAFN,CAAP;MAIH;;IACL;MACI,OAAOE,KAAP;EAfR;AAiBH,CAlBD;;AAoBA,OAAO,MAAMK,WAAW,GAAG,CAACZ,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmBE,MAAnB,MAA+B;EAAEK,IAAI,EAAEZ,aAAR;EAAuBa,OAAO,EAAE;IAAEV,EAAF;IAAMC,KAAN;IAAaC,KAAb;IAAoBE;EAApB;AAAhC,CAA/B,CAApB;AACP,OAAO,MAAMS,UAAU,GAAIF,MAAD,KAAa;EAAEF,IAAI,EAAEX,YAAR;EAAsBa;AAAtB,CAAb,CAAnB;AAEP,OAAO,MAAMG,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACpD,IAAIC,QAAQ,GAAG,MAAMpB,OAAO,CAACkB,cAAR,EAArB;;EACA,IAAIE,QAAQ,CAACC,UAAT,KAAwB,CAA5B,EAA+B;IAC3B,IAAI;MAAEjB,EAAF;MAAMC,KAAN;MAAaC;IAAb,IAAuBc,QAAQ,CAACE,IAApC;IACAH,QAAQ,CAACH,WAAW,CAACZ,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAZ,CAAR;EACH;AACJ,CANM;AAQP,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAD,EAAQkB,QAAR,EAAkBC,UAAlB,KAAiC,MAAOL,QAAP,IAAoB;EACtE,IAAIC,QAAQ,GAAG,MAAMpB,OAAO,CAACM,KAAR,CAAcD,KAAd,EAAqBkB,QAArB,EAA+BC,UAA/B,CAArB;;EACA,IAAIJ,QAAQ,CAACE,IAAT,CAAcD,UAAd,KAA6B,CAAjC,EAAoC;IAChCF,QAAQ,CAACD,cAAc,EAAf,CAAR;EACH,CAFD,MAEO;IACH,IAAIO,OAAO,GAAGL,QAAQ,CAACE,IAAT,CAAcI,QAAd,CAAuBC,MAAvB,GAAgC,CAAhC,GAAoCP,QAAQ,CAACE,IAAT,CAAcI,QAAd,CAAuB,CAAvB,CAApC,GAAgE,YAA9E;IACAP,QAAQ,CAACpB,UAAU,CAAC,OAAD,EAAU;MAAE6B,MAAM,EAAEH;IAAV,CAAV,CAAX,CAAR;EACH;AAEJ,CATM;AAWP,OAAO,MAAMI,MAAM,GAAG,MAAM,MAAOV,QAAP,IAAoB;EAC5C,IAAIC,QAAQ,GAAG,MAAMpB,OAAO,CAAC6B,MAAR,EAArB;;EACA,IAAIT,QAAQ,CAACE,IAAT,CAAcD,UAAd,KAA6B,CAAjC,EAAoC;IAChCF,QAAQ,CAACH,WAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAZ,CAAR;EACH;AAEJ,CANM;AAQP,eAAeN,WAAf"},"metadata":{},"sourceType":"module"}