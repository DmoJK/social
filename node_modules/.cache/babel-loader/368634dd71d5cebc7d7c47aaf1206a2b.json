{"ast":null,"code":"var _jsxFileName = \"/Users/artemparhomenko/my-app/src/components/Profile/ProfileInfo/ProfileInfoDescription/DescriptionForm.jsx\";\nimport s from '../ProfileInfo.module.css';\nimport { Field, Form, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DescriptionForm = props => {\n  const validationForm = yup.object().shape({\n    name: yup.string().typeError('It must be string').required('This field is required')\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        fullName: props.fullName,\n        lookingForAJob: props.lookingForAJob ? props.lookingForAJob : '',\n        lookingForAJobDescription: props.lookingForAJobDescription ? props.lookingForAJobDescription : '',\n        contacts: {\n          github: '',\n          vk: '',\n          facebook: '',\n          instagram: '',\n          twitter: '',\n          website: '',\n          youtube: '',\n          mainLink: ''\n        }\n      },\n      validateOnBlur: true,\n      onSubmit: values => {\n        props.updateProfile(values);\n      },\n      validationSchema: validationForm,\n      children: _ref => {\n        let {\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isValid,\n          handleSubmit,\n          dirty\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fullName\",\n              children: \"Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"fullName\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.fullName,\n              placeholder: props.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lookingForAJob\",\n              children: \"lookingForAJob: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"lookingForAJob\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this), `${values.lookingForAJob}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lookingForAJobDescription\",\n              children: \"lookingForAJobDescription: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"lookingForAJobDescription\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.lookingForAJobDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.contacts,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"github\",\n                children: \"github: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                name: \"github\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.contacts.github\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), touched.name && errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !isValid || !dirty,\n            type: 'submit',\n            onClick: handleSubmit,\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n};\n\n_c = DescriptionForm;\nexport default DescriptionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DescriptionForm\");","map":{"version":3,"names":["s","Field","Form","Formik","yup","DescriptionForm","props","validationForm","object","shape","name","string","typeError","required","fullName","lookingForAJob","lookingForAJobDescription","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","values","updateProfile","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty"],"sources":["/Users/artemparhomenko/my-app/src/components/Profile/ProfileInfo/ProfileInfoDescription/DescriptionForm.jsx"],"sourcesContent":["import s from '../ProfileInfo.module.css'\nimport { Field, Form, Formik } from 'formik'\nimport * as yup from 'yup'\n\nconst DescriptionForm = (props) => {\n    const validationForm = yup.object().shape({\n        name: yup.string().typeError('It must be string').required('This field is required')\n    })\n\n    return <div>\n        <Formik\n            initialValues={{\n                fullName: props.fullName,\n                lookingForAJob: props.lookingForAJob ? props.lookingForAJob : '',\n                lookingForAJobDescription: props.lookingForAJobDescription ? props.lookingForAJobDescription : '',\n                contacts: {\n                    github: '',\n                    vk: '',\n                    facebook: '',\n                    instagram: '',\n                    twitter: '',\n                    website: '',\n                    youtube: '',\n                    mainLink: ''\n                }\n            }}\n            validateOnBlur\n            onSubmit={(values) => { props.updateProfile(values) }}\n            validationSchema={validationForm}\n        >\n            {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty }) => (\n                <Form>\n                    <div>\n                        <label htmlFor=\"fullName\">Name: </label>\n                        <Field type={\"text\"}\n                            name={\"fullName\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.fullName}\n                            placeholder={props.fullName} />\n                    </div>\n                    <div>\n                        <label htmlFor=\"lookingForAJob\">lookingForAJob: </label>\n                        <Field type=\"checkbox\" name=\"lookingForAJob\" />\n                        {`${values.lookingForAJob}`}\n                    </div>\n                    <div>\n                        <label htmlFor=\"lookingForAJobDescription\">lookingForAJobDescription: </label>\n                        <Field type={\"text\"}\n                            name={\"lookingForAJobDescription\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.lookingForAJobDescription} />\n                    </div>\n                    <div>Contacts</div>\n                    <div className={s.contacts}>\n                        <div>\n                            <label htmlFor=\"github\">github: </label>\n                            <Field type={\"text\"}\n                                name={\"github\"}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.contacts.github} />\n                        </div>\n                    </div>\n                    {touched.name && errors.name && <p>{errors.name}</p>}\n                    <button disabled={!isValid || !dirty} type={'submit'} onClick={handleSubmit}>Save changes</button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n}\n\nexport default DescriptionForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}