{"ast":null,"code":"var _jsxFileName = \"/Users/artemparhomenko/my-app/src/components/Profile/ProfileInfo/ProfileInfoDescription/DescriptionForm.jsx\";\nimport s from '../ProfileInfo.module.css';\nimport { Field, Form, Formik } from 'formik';\nimport * as yup from 'yup';\nimport CustomInput from '../../../common/FormsControl/CustomInput';\nimport CustomCheckbox from '../../../common/FormsControl/CustomInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DescriptionForm = props => {\n  const validationForm = yup.object().shape({\n    fullName: yup.string().typeError('It must be string').required('This field is required'),\n    aboutMe: yup.string().typeError('It must be string').required('This field is required')\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        fullName: props.fullName,\n        aboutMe: props.aboutMe ? props.aboutMe : '',\n        lookingForAJob: props.lookingForAJob ? props.lookingForAJob : '',\n        lookingForAJobDescription: props.lookingForAJobDescription ? props.lookingForAJobDescription : '',\n        contacts: props.contacts\n      },\n      onSubmit: values => {\n        props.updateProfile(values);\n      },\n      validationSchema: validationForm,\n      children: _ref => {\n        let {\n          values,\n          handleChange,\n          handleBlur,\n          isValid,\n          handleSubmit,\n          dirty,\n          isSubmitting\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: s.descriptionText,\n          children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n            label: \"Name: \",\n            name: \"fullName\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n            label: \"AboutMe: \",\n            name: \"aboutMe\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CustomCheckbox, {\n            label: \"lookingForAJob: \",\n            name: \"lookingForAJob\",\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n            label: \"lookingForAJobDescription: \",\n            name: \"lookingForAJobDescription\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.contacts,\n            children: Object.keys(props.contacts).map(key => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: key,\n                  children: [key, \": \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"text\",\n                  name: \"contacts.\" + key\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 36\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !isValid || !dirty || isSubmitting,\n            type: 'submit',\n            onClick: handleSubmit,\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n};\n\n_c = DescriptionForm;\nexport default DescriptionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DescriptionForm\");","map":{"version":3,"names":["s","Field","Form","Formik","yup","CustomInput","CustomCheckbox","DescriptionForm","props","validationForm","object","shape","fullName","string","typeError","required","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","values","updateProfile","handleChange","handleBlur","isValid","handleSubmit","dirty","isSubmitting","descriptionText","Object","keys","map","key"],"sources":["/Users/artemparhomenko/my-app/src/components/Profile/ProfileInfo/ProfileInfoDescription/DescriptionForm.jsx"],"sourcesContent":["import s from '../ProfileInfo.module.css'\nimport { Field, Form, Formik } from 'formik'\nimport * as yup from 'yup'\nimport CustomInput from '../../../common/FormsControl/CustomInput'\nimport CustomCheckbox from '../../../common/FormsControl/CustomInput'\n\nconst DescriptionForm = (props) => {\n    const validationForm = yup.object().shape({\n        fullName: yup.string().typeError('It must be string').required('This field is required'),\n        aboutMe: yup.string().typeError('It must be string').required('This field is required')\n    })\n\n    return <div>\n        <Formik\n            initialValues={{\n                fullName: props.fullName,\n                aboutMe: props.aboutMe ? props.aboutMe : '',\n                lookingForAJob: props.lookingForAJob ? props.lookingForAJob : '',\n                lookingForAJobDescription: props.lookingForAJobDescription ? props.lookingForAJobDescription : '',\n                contacts: props.contacts\n            }}\n            onSubmit={(values) => { props.updateProfile(values) }}\n            validationSchema={validationForm}\n        >\n            {({ values, handleChange, handleBlur, isValid, handleSubmit, dirty, isSubmitting }) => (\n                <Form className={s.descriptionText}>\n                    <CustomInput label='Name: ' name='fullName' type='text' />\n                    <CustomInput label='AboutMe: ' name='aboutMe' type='text' />\n                    <CustomCheckbox label='lookingForAJob: ' name='lookingForAJob' type='checkbox' />\n                    <CustomInput label='lookingForAJobDescription: ' name='lookingForAJobDescription' type='text' />\n                    <div>Contacts</div>\n                    <div className={s.contacts}>\n                        {Object.keys(props.contacts).map(key => {\n                            return <div>\n                                <label htmlFor={key}>{key}: </label>\n                                <Field type={\"text\"}\n                                    name={\"contacts.\" + key} />\n\n                            </div>\n                        })}\n                    </div>\n                    <button disabled={!isValid || !dirty || isSubmitting } type={'submit'} onClick={handleSubmit}>Save changes</button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n}\n\nexport default DescriptionForm;"],"mappings":";AAAA,OAAOA,CAAP,MAAc,2BAAd;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,QAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;EAC/B,MAAMC,cAAc,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;IACtCC,QAAQ,EAAER,GAAG,CAACS,MAAJ,GAAaC,SAAb,CAAuB,mBAAvB,EAA4CC,QAA5C,CAAqD,wBAArD,CAD4B;IAEtCC,OAAO,EAAEZ,GAAG,CAACS,MAAJ,GAAaC,SAAb,CAAuB,mBAAvB,EAA4CC,QAA5C,CAAqD,wBAArD;EAF6B,CAAnB,CAAvB;EAKA,oBAAO;IAAA,uBACH,QAAC,MAAD;MACI,aAAa,EAAE;QACXH,QAAQ,EAAEJ,KAAK,CAACI,QADL;QAEXI,OAAO,EAAER,KAAK,CAACQ,OAAN,GAAgBR,KAAK,CAACQ,OAAtB,GAAgC,EAF9B;QAGXC,cAAc,EAAET,KAAK,CAACS,cAAN,GAAuBT,KAAK,CAACS,cAA7B,GAA8C,EAHnD;QAIXC,yBAAyB,EAAEV,KAAK,CAACU,yBAAN,GAAkCV,KAAK,CAACU,yBAAxC,GAAoE,EAJpF;QAKXC,QAAQ,EAAEX,KAAK,CAACW;MALL,CADnB;MAQI,QAAQ,EAAGC,MAAD,IAAY;QAAEZ,KAAK,CAACa,aAAN,CAAoBD,MAApB;MAA6B,CARzD;MASI,gBAAgB,EAAEX,cATtB;MAAA,UAWK;QAAA,IAAC;UAAEW,MAAF;UAAUE,YAAV;UAAwBC,UAAxB;UAAoCC,OAApC;UAA6CC,YAA7C;UAA2DC,KAA3D;UAAkEC;QAAlE,CAAD;QAAA,oBACG,QAAC,IAAD;UAAM,SAAS,EAAE3B,CAAC,CAAC4B,eAAnB;UAAA,wBACI,QAAC,WAAD;YAAa,KAAK,EAAC,QAAnB;YAA4B,IAAI,EAAC,UAAjC;YAA4C,IAAI,EAAC;UAAjD;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,WAAD;YAAa,KAAK,EAAC,WAAnB;YAA+B,IAAI,EAAC,SAApC;YAA8C,IAAI,EAAC;UAAnD;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI,QAAC,cAAD;YAAgB,KAAK,EAAC,kBAAtB;YAAyC,IAAI,EAAC,gBAA9C;YAA+D,IAAI,EAAC;UAApE;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII,QAAC,WAAD;YAAa,KAAK,EAAC,6BAAnB;YAAiD,IAAI,EAAC,2BAAtD;YAAkF,IAAI,EAAC;UAAvF;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ,eAMI;YAAK,SAAS,EAAE5B,CAAC,CAACmB,QAAlB;YAAA,UACKU,MAAM,CAACC,IAAP,CAAYtB,KAAK,CAACW,QAAlB,EAA4BY,GAA5B,CAAgCC,GAAG,IAAI;cACpC,oBAAO;gBAAA,wBACH;kBAAO,OAAO,EAAEA,GAAhB;kBAAA,WAAsBA,GAAtB;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADG,eAEH,QAAC,KAAD;kBAAO,IAAI,EAAE,MAAb;kBACI,IAAI,EAAE,cAAcA;gBADxB;kBAAA;kBAAA;kBAAA;gBAAA,QAFG;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAP;YAMH,CAPA;UADL;YAAA;YAAA;YAAA;UAAA,QANJ,eAgBI;YAAQ,QAAQ,EAAE,CAACR,OAAD,IAAY,CAACE,KAAb,IAAsBC,YAAxC;YAAuD,IAAI,EAAE,QAA7D;YAAuE,OAAO,EAAEF,YAAhF;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAhBJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADH;MAAA;IAXL;MAAA;MAAA;MAAA;IAAA;EADG;IAAA;IAAA;IAAA;EAAA,QAAP;AAkCH,CAxCD;;KAAMlB,e;AA0CN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}