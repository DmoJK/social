{"ast":null,"code":"import{connect}from'react-redux';import{login}from\"../../redux/auth-reducer\";import{Navigate}from\"react-router-dom\";import CustomInput from\"../common/FormsControl/CustomInput\";import CustomCheckbox from\"../common/FormsControl/CustomInput\";import{loginValidation}from'../../utilities/validators';import{Form,Formik}from'formik';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginForm=function LoginForm(props){if(props.isAuth){return/*#__PURE__*/_jsx(Navigate,{to:\"/profile/\".concat(props.userId)});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsx(Formik,{initialValues:{email:'',password:'',rememberMe:false,captcha:''},onSubmit:function onSubmit(values){props.login(values.email,values.password,values.rememberMe,values.captcha);},validationSchema:loginValidation,children:function children(_ref){var isValid=_ref.isValid,dirty=_ref.dirty;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(CustomInput,{label:\"Email \",name:\"email\",type:\"text\"}),/*#__PURE__*/_jsx(CustomInput,{label:\"Password: \",name:\"password\",type:\"text\"}),/*#__PURE__*/_jsx(CustomCheckbox,{label:\"rememberMe \",name:\"rememberMe\",type:\"checkbox\"}),props.captcha&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:props.captcha}),/*#__PURE__*/_jsx(CustomInput,{label:\"Captcha:\",name:\"captcha\",type:\"text\"})]}),/*#__PURE__*/_jsx(\"button\",{disabled:!isValid||!dirty,type:'submit',children:\"Save changes\"})]});}})]});};var mapStateToProps=function mapStateToProps(state){return{userId:state.auth.id,isAuth:state.auth.isAuth,captcha:state.auth.captcha};};export default connect(mapStateToProps,{login:login})(LoginForm);//{props.captcha && <img src={props.captcha} /> && <CustomInput label='Captcha:' name='captcha' type='text' /> }","map":{"version":3,"names":["connect","login","Navigate","CustomInput","CustomCheckbox","loginValidation","Form","Formik","LoginForm","props","isAuth","userId","email","password","rememberMe","captcha","values","isValid","dirty","mapStateToProps","state","auth","id"],"sources":["/Users/artemparhomenko/my-app/src/components/Login/Login.jsx"],"sourcesContent":["import { connect } from 'react-redux'\nimport { login } from \"../../redux/auth-reducer\"\nimport { Navigate } from \"react-router-dom\"\nimport CustomInput from \"../common/FormsControl/CustomInput\"\nimport CustomCheckbox from \"../common/FormsControl/CustomInput\"\nimport { loginValidation } from '../../utilities/validators'\nimport { Form, Formik } from 'formik'\n\n\nconst LoginForm = (props) => {\n    if (props.isAuth) {\n        return <Navigate to={`/profile/${props.userId}`} />\n    }\n    return <div>\n        <h1>Login</h1>\n        <Formik\n            initialValues={{\n                email: '',\n                password: '',\n                rememberMe: false,\n                captcha: ''\n            }}\n            onSubmit={(values) => { props.login(values.email, values.password, values.rememberMe, values.captcha) }}\n            validationSchema={loginValidation}\n        >\n            {({ isValid, dirty }) => (\n                <Form>\n                    <CustomInput label='Email ' name='email' type='text' />\n                    <CustomInput label='Password: ' name='password' type='text' />\n                    <CustomCheckbox label='rememberMe ' name='rememberMe' type='checkbox' />\n                    {props.captcha &&\n                        <div>\n                            <img src={props.captcha} />\n                            <CustomInput label='Captcha:' name='captcha' type='text' />\n                        </div>\n                    }\n                    <button disabled={!isValid || !dirty } type={'submit'}>Save changes</button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        userId: state.auth.id,\n        isAuth: state.auth.isAuth,\n        captcha: state.auth.captcha\n    }\n}\nexport default connect(mapStateToProps, { login })(LoginForm)\n\n//{props.captcha && <img src={props.captcha} /> && <CustomInput label='Captcha:' name='captcha' type='text' /> }"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,OAASC,KAAT,KAAsB,0BAAtB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,YAAP,KAAwB,oCAAxB,CACA,MAAOC,eAAP,KAA2B,oCAA3B,CACA,OAASC,eAAT,KAAgC,4BAAhC,CACA,OAASC,IAAT,CAAeC,MAAf,KAA6B,QAA7B,C,wFAGA,GAAMC,UAAS,CAAG,QAAZA,UAAY,CAACC,KAAD,CAAW,CACzB,GAAIA,KAAK,CAACC,MAAV,CAAkB,CACd,mBAAO,KAAC,QAAD,EAAU,EAAE,oBAAcD,KAAK,CAACE,MAApB,CAAZ,EAAP,CACH,CACD,mBAAO,oCACH,6BADG,cAEH,KAAC,MAAD,EACI,aAAa,CAAE,CACXC,KAAK,CAAE,EADI,CAEXC,QAAQ,CAAE,EAFC,CAGXC,UAAU,CAAE,KAHD,CAIXC,OAAO,CAAE,EAJE,CADnB,CAOI,QAAQ,CAAE,kBAACC,MAAD,CAAY,CAAEP,KAAK,CAACR,KAAN,CAAYe,MAAM,CAACJ,KAAnB,CAA0BI,MAAM,CAACH,QAAjC,CAA2CG,MAAM,CAACF,UAAlD,CAA8DE,MAAM,CAACD,OAArE,EAA+E,CAP3G,CAQI,gBAAgB,CAAEV,eARtB,UAUK,2BAAGY,QAAH,MAAGA,OAAH,CAAYC,KAAZ,MAAYA,KAAZ,oBACG,MAAC,IAAD,yBACI,KAAC,WAAD,EAAa,KAAK,CAAC,QAAnB,CAA4B,IAAI,CAAC,OAAjC,CAAyC,IAAI,CAAC,MAA9C,EADJ,cAEI,KAAC,WAAD,EAAa,KAAK,CAAC,YAAnB,CAAgC,IAAI,CAAC,UAArC,CAAgD,IAAI,CAAC,MAArD,EAFJ,cAGI,KAAC,cAAD,EAAgB,KAAK,CAAC,aAAtB,CAAoC,IAAI,CAAC,YAAzC,CAAsD,IAAI,CAAC,UAA3D,EAHJ,CAIKT,KAAK,CAACM,OAAN,eACG,oCACI,YAAK,GAAG,CAAEN,KAAK,CAACM,OAAhB,EADJ,cAEI,KAAC,WAAD,EAAa,KAAK,CAAC,UAAnB,CAA8B,IAAI,CAAC,SAAnC,CAA6C,IAAI,CAAC,MAAlD,EAFJ,GALR,cAUI,eAAQ,QAAQ,CAAE,CAACE,OAAD,EAAY,CAACC,KAA/B,CAAuC,IAAI,CAAE,QAA7C,0BAVJ,GADH,EAVL,EAFG,GAAP,CA4BH,CAhCD,CAkCA,GAAIC,gBAAe,CAAG,QAAlBA,gBAAkB,CAACC,KAAD,CAAW,CAC7B,MAAO,CACHT,MAAM,CAAES,KAAK,CAACC,IAAN,CAAWC,EADhB,CAEHZ,MAAM,CAAEU,KAAK,CAACC,IAAN,CAAWX,MAFhB,CAGHK,OAAO,CAAEK,KAAK,CAACC,IAAN,CAAWN,OAHjB,CAAP,CAKH,CAND,CAOA,cAAef,QAAO,CAACmB,eAAD,CAAkB,CAAElB,KAAK,CAALA,KAAF,CAAlB,CAAP,CAAoCO,SAApC,CAAf,CAEA"},"metadata":{},"sourceType":"module"}