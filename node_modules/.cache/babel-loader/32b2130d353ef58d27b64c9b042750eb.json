{"ast":null,"code":"import { profileAPI, usersAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_USER_STATUS = 'SET-USER-STATUS';\nlet initialState = {\n  postsData: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 12\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 11\n  }],\n  newPostText: 'it-kamasutra',\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = state.newPostText;\n      return { ...state,\n        newPostText: '',\n        postsData: [...state.postsData, {\n          id: 5,\n          message: newPost,\n          likesCount: 0\n        }]\n      };\n\n    case UPDATE_NEW_POST_TEXT:\n      return { ...state,\n        newPostText: action.newText\n      };\n\n    case SET_USER_PROFILE:\n      return { ...state,\n        profile: action.profile\n      };\n\n    case SET_USER_STATUS:\n      return { ...state,\n        status: action.status\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPost = newPost => ({\n  type: ADD_POST,\n  newPost\n});\nexport const updateNewPostText = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUserStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const getProfile = userId => dispatch => {\n  usersAPI.getProfile(userId).then(response => {\n    dispatch(setUserProfile(response));\n  });\n};\nexport const getStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(response => {\n    dispatch(setUserStatus(response));\n  });\n};\nexport const updateStatus = status => dispatch => {\n  profileAPI.updateStatus(status).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setUserStatus(response));\n    }\n  });\n};\nexport default profileReducer;","map":{"version":3,"names":["profileAPI","usersAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_USER_STATUS","initialState","postsData","id","message","likesCount","newPostText","profile","status","profileReducer","state","action","type","newPost","newText","addPost","updateNewPostText","text","setUserProfile","setUserStatus","getProfile","userId","dispatch","then","response","getStatus","updateStatus","data","resultCode"],"sources":["/Users/artemparhomenko/my-app/src/redux/profile-reducer.js"],"sourcesContent":["import { profileAPI, usersAPI } from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\nconst SET_USER_STATUS = 'SET-USER-STATUS'\n\nlet initialState = {\n    postsData: [\n        { id: 1, message: 'Hi, how are you?', likesCount: 12 },\n        { id: 2, message: 'It\\'s my first post', likesCount: 11 },\n    ],\n    newPostText: 'it-kamasutra',\n    profile: null,\n    status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = state.newPostText;\n            return {\n                ...state,\n                newPostText: '',\n                postsData: [...state.postsData, { id: 5, message: newPost, likesCount: 0 }]\n            };\n        case UPDATE_NEW_POST_TEXT:\n            return {\n                ...state,\n                newPostText: action.newText\n            };\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            };\n        case SET_USER_STATUS:\n            return {\n                ...state,\n                status: action.status\n            };\n        default:\n            return state;\n    }\n}\n\nexport const addPost = (newPost) => ({ type: ADD_POST, newPost })\nexport const updateNewPostText = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text })\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, status })\n\nexport const getProfile = (userId) => (dispatch) => {\n    usersAPI.getProfile(userId)\n        .then(response => {\n            dispatch(setUserProfile(response))\n        })\n}\nexport const getStatus = (userId) => (dispatch) => {\n    profileAPI.getStatus(userId)\n        .then(response => {\n            dispatch(setUserStatus(response))\n        })\n}\nexport const updateStatus = (status) => (dispatch) => {\n    profileAPI.updateStatus(status)\n        .then(response => {\n            if(response.data.resultCode === 0) {\n                dispatch(setUserStatus(response))\n            }\n        })\n}\n\nexport default profileReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}