{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nimport { changeObjectInArray } from \"../utilits/object-search\";\nconst updateFollowed = changeObjectInArray;\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUserCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: updateFollowed(state.users, action.userId, 'id', {\n          followed: true\n        }) // users: state.users.map(u => {\n        //     if (u.id === action.userId) {\n        //         return { ...u, followed: u.followed = true }\n        //     };\n        //     return u;\n        // })\n\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: updateFollowed(state.users, action.userId, 'id', {\n          followed: false\n        }) // users: state.users.map(u => {\n        //     if (u.id === action.userId) {\n        //         return { ...u, followed: u.followed = false }\n        //     };\n        //     return u;\n        // })\n\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUserCount: action.totalCount\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setTotalUsersCount = totalCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalCount\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const getUsersThunkCreator = (currentPage, pageSize) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  let response = await usersAPI.getUsers(currentPage, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setUsers(response.items));\n  dispatch(setTotalUsersCount(response.totalCount));\n};\nexport const changePageThunkCreator = (pageNumber, pageSize) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  dispatch(setCurrentPage(pageNumber));\n  let response = await usersAPI.getUsers(pageNumber, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setUsers(response.items));\n  dispatch(setTotalUsersCount(response.totalCount));\n};\n\nconst followUnfollow = async (dispatch, id, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, id));\n  let response = await apiMethod(id);\n\n  if (response.resultCode === 0) {\n    dispatch(actionCreator(id));\n  }\n\n  dispatch(toggleFollowingProgress(false, id));\n};\n\nexport const unfollowThunkCreator = id => async dispatch => {\n  followUnfollow(dispatch, id, usersAPI.unfollow.bind(usersAPI), unfollow);\n};\nexport const followThunkCreator = id => async dispatch => {\n  followUnfollow(dispatch, id, usersAPI.follow.bind(usersAPI), follow);\n};\nexport default usersReducer;","map":{"version":3,"names":["usersAPI","changeObjectInArray","updateFollowed","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUserCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","userId","followed","totalCount","filter","id","setTotalUsersCount","setCurrentPage","setUsers","follow","unfollow","toggleIsFetching","toggleFollowingProgress","getUsersThunkCreator","dispatch","response","getUsers","items","changePageThunkCreator","pageNumber","followUnfollow","apiMethod","actionCreator","resultCode","unfollowThunkCreator","bind","followThunkCreator"],"sources":["/Users/artemparhomenko/my-app/src/redux/users-reducer.js"],"sourcesContent":["import { usersAPI } from \"../api/api\";\nimport { changeObjectInArray } from \"../utilits/object-search\";\n\nconst updateFollowed = changeObjectInArray\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalUserCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateFollowed(state.users, action.userId, 'id', {followed: true})\n                // users: state.users.map(u => {\n                //     if (u.id === action.userId) {\n                //         return { ...u, followed: u.followed = true }\n                //     };\n                //     return u;\n                // })\n            };\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateFollowed(state.users, action.userId, 'id', {followed: false})\n                // users: state.users.map(u => {\n                //     if (u.id === action.userId) {\n                //         return { ...u, followed: u.followed = false }\n                //     };\n                //     return u;\n                // })\n            };\n        case SET_USERS:\n            return {\n                ...state,\n                users: action.users\n            }\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.currentPage\n            };\n        case SET_TOTAL_USERS_COUNT:\n            return {\n                ...state,\n                totalUserCount: action.totalCount\n            };\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            };\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            };\n        default:\n            return state;\n    }\n};\nexport const setTotalUsersCount = (totalCount) => ({ type: SET_TOTAL_USERS_COUNT, totalCount });\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\nexport const setUsers = (users) => ({ type: SET_USERS, users });\nexport const follow = (userId) => ({ type: FOLLOW, userId });\nexport const unfollow = (userId) => ({ type: UNFOLLOW, userId });\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\n\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\n    dispatch(toggleIsFetching(true))\n    let response = await usersAPI.getUsers(currentPage, pageSize)\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(response.items))\n    dispatch(setTotalUsersCount(response.totalCount))\n}\nexport const changePageThunkCreator = (pageNumber, pageSize) => async (dispatch) => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(pageNumber))\n    let response = await usersAPI.getUsers(pageNumber, pageSize)\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(response.items))\n    dispatch(setTotalUsersCount(response.totalCount))\n}\n\nconst followUnfollow = async (dispatch, id, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, id))\n    let response = await apiMethod(id)\n    if (response.resultCode === 0) {\n        dispatch(actionCreator(id))\n    }\n    dispatch(toggleFollowingProgress(false, id))\n}\n\nexport const unfollowThunkCreator = (id) => async (dispatch) => {\n    followUnfollow(dispatch, id, usersAPI.unfollow.bind(usersAPI), unfollow)\n}\nexport const followThunkCreator = (id) => async (dispatch) => {\n    followUnfollow(dispatch, id, usersAPI.follow.bind(usersAPI), follow)\n}\n\nexport default usersReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}