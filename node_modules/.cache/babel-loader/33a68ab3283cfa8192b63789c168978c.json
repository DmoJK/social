{"ast":null,"code":"var _jsxFileName = \"/Users/artemparhomenko/my-app/src/components/Profile/MyPosts/MyPosts.jsx\";\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport React from 'react';\nimport { Form, Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPostsForm = /*#__PURE__*/React.memo(_c = props => {\n  let postsElements = props.postsData.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    message: p.message,\n    likesCount: p.likesCount\n  }, p.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 15\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {},\n      onSubmit: values => {\n        props.addPost(values.addPost);\n      },\n      validationSchema: profileValidation,\n      children: _ref => {\n        let {\n          isValid,\n          dirty,\n          isSubmitting\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.postBlock,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"My posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: s.postArea,\n            children: [/*#__PURE__*/_jsxDEV(CustomTextarea, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: !isValid || !dirty || isSubmitting,\n                type: 'submit',\n                children: \"Add post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.posts,\n            children: postsElements\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n});\n_c2 = MyPostsForm;\nexport default MyPostsForm; // const maxLength = maxLengthCreator(10)\n// const MyPosts = React.memo(props => {\n//   let postsElements = props.postsData\n//     .map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\n//   const onSubmit = (formData) => {\n//     props.addPost(formData.addPost);\n//   }\n//   return (\n//     <div className={s.postBlock}>\n//       <h3>My posts</h3>\n//       <Posts onSubmit={onSubmit} />\n//       <div className={s.posts}>\n//         {postsElements}\n//       </div>\n//     </div>\n//   )\n// })\n// const MyPostsForm = (props) => {\n//   return (\n//     <form onSubmit={props.handleSubmit} className={s.postArea}>\n//       <div>\n//         <Field placeholder=\"What's new\" name={'addPost'} component={Textarea} validate={[required, maxLength]} />\n//       </div>\n//       <div>\n//         <button>Add post</button>\n//       </div>\n//     </form>\n//   )\n// }\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyPostsForm$React.memo\");\n$RefreshReg$(_c2, \"MyPostsForm\");","map":{"version":3,"names":["s","Post","React","Form","Formik","MyPostsForm","memo","props","postsElements","postsData","map","p","message","likesCount","id","values","addPost","profileValidation","isValid","dirty","isSubmitting","postBlock","postArea","posts"],"sources":["/Users/artemparhomenko/my-app/src/components/Profile/MyPosts/MyPosts.jsx"],"sourcesContent":["import s from './MyPosts.module.css'\nimport Post from './Post/Post'\nimport React from 'react';\nimport { Form, Formik } from 'formik';\n\n\nconst MyPostsForm = React.memo(props => {\n  let postsElements = props.postsData\n    .map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\n\n  return <div>\n    <Formik\n      initialValues={{\n      }}\n      onSubmit={(values) => { props.addPost(values.addPost) }}\n      validationSchema={profileValidation}\n    >\n      {({ isValid, dirty, isSubmitting }) => (\n        <div className={s.postBlock}>\n          <h3>My posts</h3>\n          <Form className={s.postArea}>\n            <CustomTextarea />\n            <div>\n            <button disabled={!isValid || !dirty || isSubmitting } type={'submit'}>Add post</button>\n            </div>\n          </Form>\n          <div className={s.posts}>\n            {postsElements}\n          </div>\n        </div>\n      )}\n    </Formik>\n  </div>\n})\n\nexport default MyPostsForm;\n\n\n// const maxLength = maxLengthCreator(10)\n\n// const MyPosts = React.memo(props => {\n//   let postsElements = props.postsData\n//     .map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\n\n//   const onSubmit = (formData) => {\n//     props.addPost(formData.addPost);\n//   }\n\n//   return (\n//     <div className={s.postBlock}>\n//       <h3>My posts</h3>\n//       <Posts onSubmit={onSubmit} />\n//       <div className={s.posts}>\n//         {postsElements}\n//       </div>\n//     </div>\n//   )\n// })\n\n// const MyPostsForm = (props) => {\n//   return (\n//     <form onSubmit={props.handleSubmit} className={s.postArea}>\n//       <div>\n//         <Field placeholder=\"What's new\" name={'addPost'} component={Textarea} validate={[required, maxLength]} />\n//       </div>\n//       <div>\n//         <button>Add post</button>\n//       </div>\n//     </form>\n//   )\n// }"],"mappings":";AAAA,OAAOA,CAAP,MAAc,sBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;;AAGA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,IAAN,MAAWC,KAAK,IAAI;EACtC,IAAIC,aAAa,GAAGD,KAAK,CAACE,SAAN,CACjBC,GADiB,CACbC,CAAC,iBAAI,QAAC,IAAD;IAAM,OAAO,EAAEA,CAAC,CAACC,OAAjB;IAA0B,UAAU,EAAED,CAAC,CAACE;EAAxC,GAAyDF,CAAC,CAACG,EAA3D;IAAA;IAAA;IAAA;EAAA,QADQ,CAApB;EAGA,oBAAO;IAAA,uBACL,QAAC,MAAD;MACE,aAAa,EAAE,EADjB;MAGE,QAAQ,EAAGC,MAAD,IAAY;QAAER,KAAK,CAACS,OAAN,CAAcD,MAAM,CAACC,OAArB;MAA+B,CAHzD;MAIE,gBAAgB,EAAEC,iBAJpB;MAAA,UAMG;QAAA,IAAC;UAAEC,OAAF;UAAWC,KAAX;UAAkBC;QAAlB,CAAD;QAAA,oBACC;UAAK,SAAS,EAAEpB,CAAC,CAACqB,SAAlB;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,IAAD;YAAM,SAAS,EAAErB,CAAC,CAACsB,QAAnB;YAAA,wBACE,QAAC,cAAD;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA,uBACA;gBAAQ,QAAQ,EAAE,CAACJ,OAAD,IAAY,CAACC,KAAb,IAAsBC,YAAxC;gBAAuD,IAAI,EAAE,QAA7D;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADA;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAQE;YAAK,SAAS,EAAEpB,CAAC,CAACuB,KAAlB;YAAA,UACGf;UADH;YAAA;YAAA;YAAA;UAAA,QARF;QAAA;UAAA;UAAA;UAAA;QAAA,QADD;MAAA;IANH;MAAA;MAAA;MAAA;IAAA;EADK;IAAA;IAAA;IAAA;EAAA,QAAP;AAuBD,CA3BmB,CAApB;MAAMH,W;AA6BN,eAAeA,WAAf,C,CAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}