{"ast":null,"code":"var _jsxFileName = \"/Users/artemparhomenko/my-app/src/components/Profile/ProfileInfo/ProfileInfoDescription/DescriptionForm.jsx\";\nimport s from '../ProfileInfo.module.css';\nimport { Field, Form, Formik } from 'formik';\nimport * as yup from 'yup';\nimport CustomInput from '../../../common/FormsControl/CustomInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DescriptionForm = props => {\n  const validationForm = yup.object().shape({\n    fullName: yup.string().typeError('It must be string').required('This field is required'),\n    aboutMe: yup.string().typeError('It must be string').required('This field is required')\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        fullName: props.fullName,\n        aboutMe: props.aboutMe ? props.aboutMe : '',\n        lookingForAJob: props.lookingForAJob ? props.lookingForAJob : '',\n        lookingForAJobDescription: props.lookingForAJobDescription ? props.lookingForAJobDescription : '',\n        contacts: props.contacts\n      },\n      onSubmit: values => {\n        props.updateProfile(values);\n      },\n      validationSchema: validationForm,\n      children: _ref => {\n        let {\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isValid,\n          handleSubmit,\n          dirty\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: s.descriptionText,\n          children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n            label: \"Name: \",\n            name: \"fullName\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"aboutMe\",\n              children: \"aboutMe: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"aboutMe\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.aboutMe\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lookingForAJob\",\n              children: \"lookingForAJob: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              name: \"lookingForAJob\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this), `${values.lookingForAJob}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lookingForAJobDescription\",\n              children: \"lookingForAJobDescription: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"lookingForAJobDescription\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.lookingForAJobDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.contacts,\n            children: Object.keys(props.contacts).map(key => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: key,\n                  children: [key, \": \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"text\",\n                  name: \"contacts.\" + key,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.contacts[key]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 36\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), touched.fullName && errors.fullName && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 61\n          }, this), touched.aboutMe && errors.aboutMe && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.aboutMe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 59\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !isValid || !dirty,\n            type: 'submit',\n            onClick: handleSubmit,\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n};\n\n_c = DescriptionForm;\nexport default DescriptionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DescriptionForm\");","map":{"version":3,"names":["s","Field","Form","Formik","yup","CustomInput","DescriptionForm","props","validationForm","object","shape","fullName","string","typeError","required","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","values","updateProfile","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","descriptionText","Object","keys","map","key"],"sources":["/Users/artemparhomenko/my-app/src/components/Profile/ProfileInfo/ProfileInfoDescription/DescriptionForm.jsx"],"sourcesContent":["import s from '../ProfileInfo.module.css'\nimport { Field, Form, Formik } from 'formik'\nimport * as yup from 'yup'\nimport CustomInput from '../../../common/FormsControl/CustomInput'\n\nconst DescriptionForm = (props) => {\n    const validationForm = yup.object().shape({\n        fullName: yup.string().typeError('It must be string').required('This field is required'),\n        aboutMe: yup.string().typeError('It must be string').required('This field is required')\n    })\n\n    return <div>\n        <Formik\n            initialValues={{\n                fullName: props.fullName,\n                aboutMe: props.aboutMe ? props.aboutMe : '',\n                lookingForAJob: props.lookingForAJob ? props.lookingForAJob : '',\n                lookingForAJobDescription: props.lookingForAJobDescription ? props.lookingForAJobDescription : '',\n                contacts: props.contacts\n            }}\n            onSubmit={(values) => { props.updateProfile(values) }}\n            validationSchema={validationForm}\n        >\n            {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty }) => (\n                <Form className={s.descriptionText}>\n                    <CustomInput label='Name: ' name='fullName' type='text' />\n                    \n                    <div>\n                        <label htmlFor=\"aboutMe\">aboutMe: </label>\n                        <Field type={\"text\"}\n                            name={\"aboutMe\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.aboutMe} />\n                    </div>\n                    <div>\n                        <label htmlFor=\"lookingForAJob\">lookingForAJob: </label>\n                        <Field type=\"checkbox\" name=\"lookingForAJob\" />\n                        {`${values.lookingForAJob}`}\n                    </div>\n                    <div>\n                        <label htmlFor=\"lookingForAJobDescription\">lookingForAJobDescription: </label>\n                        <Field type={\"text\"}\n                            name={\"lookingForAJobDescription\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.lookingForAJobDescription} />\n                    </div>\n                    <div>Contacts</div>\n                    <div className={s.contacts}>\n                        {Object.keys(props.contacts).map(key => {\n                            return <div>\n                                <label htmlFor={key}>{key}: </label>\n                                <Field type={\"text\"}\n                                    name={\"contacts.\" + key}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.contacts[key]} />\n\n                            </div>\n                        })}\n                    </div>\n                    {touched.fullName && errors.fullName && <p>{errors.fullName}</p>}\n                    {touched.aboutMe && errors.aboutMe && <p>{errors.aboutMe}</p>}\n                    <button disabled={!isValid || !dirty} type={'submit'} onClick={handleSubmit}>Save changes</button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n}\n\nexport default DescriptionForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}