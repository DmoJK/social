{"ast":null,"code":"import { connect } from 'react-redux';\nimport { updateNewMessageText, sendMessage } from '../../redux/messages-reducer';\nimport Dialogs from './Dialogs';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = state => {\n  return {\n    dialogsData: state.messagesPage.dialogsData,\n    messagesData: state.messagesPage.messagesData,\n    newMessageText: state.messagesPage.newMessageText\n  };\n};\n\nconst DialogsContainer = compose(connect(mapStateToProps, {\n  sendMessage,\n  updateNewMessageText\n}), withAuthRedirect)(Dialogs);\nexport default DialogsContainer; // const DialogsContainer = (props) => {\n//     return (\n//         <StoreContext.Consumer>\n//             {\n//                 (store) => {\n//                     let state = store.getState().messagesPage;\n//                     let addMessage = () => {\n//                         store.dispatch(sendMessage());\n//                     };\n//                     let messageChange = (text) => {\n//                         store.dispatch(updateNewMessageText(text));\n//                     };\n//                     return <Dialogs addMessage={addMessage} messageChange={messageChange} messagesData={state.messagesData} dialogsData={state.dialogsData} newMessageText={state.newMessageText} />\n//                 }\n//             }\n//         </StoreContext.Consumer>\n//     )\n// }","map":{"version":3,"names":["connect","updateNewMessageText","sendMessage","Dialogs","withAuthRedirect","compose","mapStateToProps","state","dialogsData","messagesPage","messagesData","newMessageText","DialogsContainer"],"sources":["/Users/artemparhomenko/my-app/src/components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import { connect } from 'react-redux';\nimport { updateNewMessageText, sendMessage } from '../../redux/messages-reducer';\nimport Dialogs from './Dialogs';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsData: state.messagesPage.dialogsData,\n        messagesData: state.messagesPage.messagesData,\n        newMessageText: state.messagesPage.newMessageText,\n    }\n};\n\nconst DialogsContainer = compose(\n    connect(mapStateToProps,\n        { sendMessage, updateNewMessageText }),\n    withAuthRedirect\n)(Dialogs)\n\nexport default DialogsContainer;\n\n// const DialogsContainer = (props) => {\n//     return (\n//         <StoreContext.Consumer>\n//             {\n//                 (store) => {\n//                     let state = store.getState().messagesPage;\n\n//                     let addMessage = () => {\n//                         store.dispatch(sendMessage());\n//                     };\n//                     let messageChange = (text) => {\n//                         store.dispatch(updateNewMessageText(text));\n//                     };\n//                     return <Dialogs addMessage={addMessage} messageChange={messageChange} messagesData={state.messagesData} dialogsData={state.dialogsData} newMessageText={state.newMessageText} />\n//                 }\n//             }\n//         </StoreContext.Consumer>\n//     )\n// }\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,EAA+BC,WAA/B,QAAkD,8BAAlD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;EAC7B,OAAO;IACHC,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD7B;IAEHE,YAAY,EAAEH,KAAK,CAACE,YAAN,CAAmBC,YAF9B;IAGHC,cAAc,EAAEJ,KAAK,CAACE,YAAN,CAAmBE;EAHhC,CAAP;AAKH,CAND;;AAQA,MAAMC,gBAAgB,GAAGP,OAAO,CAC5BL,OAAO,CAACM,eAAD,EACH;EAAEJ,WAAF;EAAeD;AAAf,CADG,CADqB,EAG5BG,gBAH4B,CAAP,CAIvBD,OAJuB,CAAzB;AAMA,eAAeS,gBAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}