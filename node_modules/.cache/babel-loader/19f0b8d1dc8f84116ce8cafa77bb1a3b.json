{"ast":null,"code":"import { authAPI } from \"../api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_CAPTCHA = 'SET_CAPTCHA';\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isFetching: false,\n  isAuth: false,\n  captcha: null\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.payload\n      };\n\n    case SET_CAPTCHA:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserData = (id, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    id,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const getCaptcha = () => async dispatch => {\n  const response = await authAPI.getCaptcha();\n  const captcha = response.data.url;\n  dispatch(setCaptcha);\n};\nexport const getYourProfile = () => async dispatch => {\n  let response = await authAPI.getYourProfile();\n\n  if (response.resultCode === 0) {\n    let {\n      id,\n      email,\n      login\n    } = response.data;\n    dispatch(setUserData(id, email, login, true));\n  }\n};\nexport const login = (email, password, rememberMe) => async dispatch => {\n  let response = await authAPI.login(email, password, rememberMe);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getYourProfile());\n  }\n};\nexport const logout = () => async dispatch => {\n  let response = await authAPI.logout();\n\n  if (response.data.resultCode === 0) {\n    dispatch(setUserData(null, null, null, false));\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["authAPI","SET_USER_DATA","SET_CAPTCHA","initialState","id","email","login","isFetching","isAuth","captcha","authReducer","state","action","type","payload","setUserData","getCaptcha","dispatch","response","data","url","setCaptcha","getYourProfile","resultCode","password","rememberMe","logout"],"sources":["/Users/artemparhomenko/my-app/src/redux/auth-reducer.js"],"sourcesContent":["import { authAPI } from \"../api/api\"\n\nconst SET_USER_DATA = 'SET_USER_DATA'\nconst SET_CAPTCHA = 'SET_CAPTCHA'\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isFetching: false,\n    isAuth: false,\n    captcha: null\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            };\n        case SET_CAPTCHA:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport const setUserData = (id, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { id, email, login, isAuth } })\n\nexport const getCaptcha = () => async (dispatch) => {\n    const response = await authAPI.getCaptcha()\n    const captcha = response.data.url\n    dispatch(setCaptcha)\n}\n\nexport const getYourProfile = () => async (dispatch) => {\n    let response = await authAPI.getYourProfile()\n    if (response.resultCode === 0) {\n        let { id, email, login } = response.data\n        dispatch(setUserData(id, email, login, true))\n    }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe)\n    if (response.data.resultCode === 0) {\n        dispatch(getYourProfile())\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout()\n    if (response.data.resultCode === 0) {\n        dispatch(setUserData(null, null, null, false))\n    }\n\n}\n\nexport default authReducer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,IAAIC,YAAY,GAAG;EACfC,EAAE,EAAE,IADW;EAEfC,KAAK,EAAE,IAFQ;EAGfC,KAAK,EAAE,IAHQ;EAIfC,UAAU,EAAE,KAJG;EAKfC,MAAM,EAAE,KALO;EAMfC,OAAO,EAAE;AANM,CAAnB;;AASA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBR,YAAyB;EAAA,IAAXS,MAAW;;EAClD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKZ,aAAL;MACI,OAAO,EACH,GAAGU,KADA;QAEH,GAAGC,MAAM,CAACE;MAFP,CAAP;;IAIJ,KAAKZ,WAAL;MACI,OAAO,EACH,GAAGS,KADA;QAEH,GAAGC,MAAM,CAACE;MAFP,CAAP;;IAIJ;MACI,OAAOH,KAAP;EAZR;AAcH,CAfD;;AAiBA,OAAO,MAAMI,WAAW,GAAG,CAACX,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmBE,MAAnB,MAA+B;EAAEK,IAAI,EAAEZ,aAAR;EAAuBa,OAAO,EAAE;IAAEV,EAAF;IAAMC,KAAN;IAAaC,KAAb;IAAoBE;EAApB;AAAhC,CAA/B,CAApB;AAEP,OAAO,MAAMQ,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;EAChD,MAAMC,QAAQ,GAAG,MAAMlB,OAAO,CAACgB,UAAR,EAAvB;EACA,MAAMP,OAAO,GAAGS,QAAQ,CAACC,IAAT,CAAcC,GAA9B;EACAH,QAAQ,CAACI,UAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOL,QAAP,IAAoB;EACpD,IAAIC,QAAQ,GAAG,MAAMlB,OAAO,CAACsB,cAAR,EAArB;;EACA,IAAIJ,QAAQ,CAACK,UAAT,KAAwB,CAA5B,EAA+B;IAC3B,IAAI;MAAEnB,EAAF;MAAMC,KAAN;MAAaC;IAAb,IAAuBY,QAAQ,CAACC,IAApC;IACAF,QAAQ,CAACF,WAAW,CAACX,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAZ,CAAR;EACH;AACJ,CANM;AAQP,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAD,EAAQmB,QAAR,EAAkBC,UAAlB,KAAiC,MAAOR,QAAP,IAAoB;EACtE,IAAIC,QAAQ,GAAG,MAAMlB,OAAO,CAACM,KAAR,CAAcD,KAAd,EAAqBmB,QAArB,EAA+BC,UAA/B,CAArB;;EACA,IAAIP,QAAQ,CAACC,IAAT,CAAcI,UAAd,KAA6B,CAAjC,EAAoC;IAChCN,QAAQ,CAACK,cAAc,EAAf,CAAR;EACH;AACJ,CALM;AAOP,OAAO,MAAMI,MAAM,GAAG,MAAM,MAAOT,QAAP,IAAoB;EAC5C,IAAIC,QAAQ,GAAG,MAAMlB,OAAO,CAAC0B,MAAR,EAArB;;EACA,IAAIR,QAAQ,CAACC,IAAT,CAAcI,UAAd,KAA6B,CAAjC,EAAoC;IAChCN,QAAQ,CAACF,WAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAZ,CAAR;EACH;AAEJ,CANM;AAQP,eAAeL,WAAf"},"metadata":{},"sourceType":"module"}