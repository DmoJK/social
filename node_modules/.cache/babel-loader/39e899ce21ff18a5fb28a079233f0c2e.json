{"ast":null,"code":"var _jsxFileName = \"/Users/artemparhomenko/my-app/src/components/Login/Login.jsx\";\nimport { connect } from 'react-redux';\nimport { login } from \"../../redux/auth-reducer\";\nimport { Navigate } from \"react-router-dom\";\nimport CustomInput from \"../common/FormsControl/CustomInput\";\nimport CustomCheckbox from \"../common/FormsControl/CustomInput\";\nimport { loginValidation } from '../../utilits/validators';\nimport { Form, Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/profile/${props.userId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: '',\n        rememberMe: false\n      },\n      onSubmit: values => {\n        props.login(values.email, values.password, values.rememberMe);\n      },\n      validationSchema: loginValidation,\n      children: _ref => {\n        let {\n          isValid,\n          dirty,\n          isSubmitting\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n            label: \"Email \",\n            name: \"email\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n            label: \"Password: \",\n            name: \"password\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CustomCheckbox, {\n            label: \"rememberMe \",\n            name: \"rememberMe\",\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !isValid || !dirty || isSubmitting,\n            type: 'submit',\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n};\n\n_c = LoginForm;\n\nlet mapStateToProps = state => {\n  return {\n    userId: state.auth.id,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login\n})(LoginForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["connect","login","Navigate","CustomInput","CustomCheckbox","loginValidation","Form","Formik","LoginForm","props","isAuth","userId","email","password","rememberMe","values","isValid","dirty","isSubmitting","mapStateToProps","state","auth","id"],"sources":["/Users/artemparhomenko/my-app/src/components/Login/Login.jsx"],"sourcesContent":["import { connect } from 'react-redux'\nimport { login } from \"../../redux/auth-reducer\"\nimport { Navigate } from \"react-router-dom\"\nimport CustomInput from \"../common/FormsControl/CustomInput\"\nimport CustomCheckbox from \"../common/FormsControl/CustomInput\"\nimport { loginValidation } from '../../utilits/validators'\nimport { Form, Formik } from 'formik'\n\n\nconst LoginForm = (props) => {\n    if (props.isAuth) {\n        return <Navigate to={`/profile/${props.userId}`} />\n    }\n    return <div>\n        <h1>Login</h1>\n        <Formik\n            initialValues={{\n                email: '',\n                password: '',\n                rememberMe: false\n            }}\n            onSubmit={(values) => { props.login(values.email, values.password, values.rememberMe) }}\n            validationSchema={ loginValidation }\n        >\n            {({ isValid, dirty, isSubmitting }) => (\n                <Form>\n                    <CustomInput label='Email ' name='email' type='text' />\n                    <CustomInput label='Password: ' name='password' type='text' />\n                    <CustomCheckbox label='rememberMe ' name='rememberMe' type='checkbox' />\n                    <button disabled={!isValid || !dirty || isSubmitting} type={'submit'}>Save changes</button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        userId: state.auth.id,\n        isAuth: state.auth.isAuth\n    }\n}\nexport default connect(mapStateToProps, { login })(LoginForm)"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EACzB,IAAIA,KAAK,CAACC,MAAV,EAAkB;IACd,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAG,YAAWD,KAAK,CAACE,MAAO;IAAvC;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACD,oBAAO;IAAA,wBACH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAEH,QAAC,MAAD;MACI,aAAa,EAAE;QACXC,KAAK,EAAE,EADI;QAEXC,QAAQ,EAAE,EAFC;QAGXC,UAAU,EAAE;MAHD,CADnB;MAMI,QAAQ,EAAGC,MAAD,IAAY;QAAEN,KAAK,CAACR,KAAN,CAAYc,MAAM,CAACH,KAAnB,EAA0BG,MAAM,CAACF,QAAjC,EAA2CE,MAAM,CAACD,UAAlD;MAA+D,CAN3F;MAOI,gBAAgB,EAAGT,eAPvB;MAAA,UASK;QAAA,IAAC;UAAEW,OAAF;UAAWC,KAAX;UAAkBC;QAAlB,CAAD;QAAA,oBACG,QAAC,IAAD;UAAA,wBACI,QAAC,WAAD;YAAa,KAAK,EAAC,QAAnB;YAA4B,IAAI,EAAC,OAAjC;YAAyC,IAAI,EAAC;UAA9C;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,WAAD;YAAa,KAAK,EAAC,YAAnB;YAAgC,IAAI,EAAC,UAArC;YAAgD,IAAI,EAAC;UAArD;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI,QAAC,cAAD;YAAgB,KAAK,EAAC,aAAtB;YAAoC,IAAI,EAAC,YAAzC;YAAsD,IAAI,EAAC;UAA3D;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII;YAAQ,QAAQ,EAAE,CAACF,OAAD,IAAY,CAACC,KAAb,IAAsBC,YAAxC;YAAsD,IAAI,EAAE,QAA5D;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADH;MAAA;IATL;MAAA;MAAA;MAAA;IAAA,QAFG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAqBH,CAzBD;;KAAMV,S;;AA2BN,IAAIW,eAAe,GAAIC,KAAD,IAAW;EAC7B,OAAO;IACHT,MAAM,EAAES,KAAK,CAACC,IAAN,CAAWC,EADhB;IAEHZ,MAAM,EAAEU,KAAK,CAACC,IAAN,CAAWX;EAFhB,CAAP;AAIH,CALD;;AAMA,eAAeV,OAAO,CAACmB,eAAD,EAAkB;EAAElB;AAAF,CAAlB,CAAP,CAAoCO,SAApC,CAAf"},"metadata":{},"sourceType":"module"}