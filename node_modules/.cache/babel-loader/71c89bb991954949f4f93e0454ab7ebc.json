{"ast":null,"code":"var _jsxFileName = \"/Users/artemparhomenko/my-app/src/components/common/Paginator/Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport s from './Paginator.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Paginator = _ref => {\n  _s();\n\n  let {\n    totalItemsCount,\n    pageSize,\n    currentPage,\n    onPageChanged,\n    portionSize = 10\n  } = _ref;\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.pages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setPortionNumber(portionNumber - 1);\n          },\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: currentPage === p ? s.selectedPage : undefined,\n            onClick: e => {\n              onPageChanged(p);\n            },\n            children: [p, \" \"]\n          }, p, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setPortionNumber(portionNumber + 1);\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"names":["useState","s","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","p","map","selectedPage","undefined","e"],"sources":["/Users/artemparhomenko/my-app/src/components/common/Paginator/Pagination.jsx"],"sourcesContent":["import { useState } from 'react';\nimport s from './Paginator.module.css';\n\nconst Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize)\n    let [portionNumber, setPortionNumber] = useState(1)\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    let rightPortionPageNumber = portionNumber * portionSize\n\n    return <div>\n        <div className={s.pages}>\n            <div>{portionNumber > 1 && <button onClick={() => { setPortionNumber(portionNumber - 1) }} >Prev</button>}</div>\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map(p => {\n                    return <div><span key={p} className={currentPage === p ? s.selectedPage : undefined}\n                        onClick={(e) => { onPageChanged(p); }}>{p} </span></div>\n                })}\n            <div>{portionCount > portionNumber && <button onClick={() => { setPortionNumber(portionNumber + 1) }} >Next</button>}</div>\n        </div>\n    </div>\n};\n\nexport default Paginator;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,CAAP,MAAc,wBAAd;;;AAEA,MAAMC,SAAS,GAAG,QAAiF;EAAA;;EAAA,IAAhF;IAAEC,eAAF;IAAmBC,QAAnB;IAA6BC,WAA7B;IAA0CC,aAA1C;IAAyDC,WAAW,GAAG;EAAvE,CAAgF;EAC/F,IAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;EAEA,IAAIO,KAAK,GAAG,EAAZ;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;IAClCD,KAAK,CAACE,IAAN,CAAWD,CAAX;EACH;;EAED,IAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;EACA,IAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,CAAD,CAAhD;EACA,IAAIiB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;EACA,IAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;EAEA,oBAAO;IAAA,uBACH;MAAK,SAAS,EAAEN,CAAC,CAACU,KAAlB;MAAA,wBACI;QAAA,UAAMI,aAAa,GAAG,CAAhB,iBAAqB;UAAQ,OAAO,EAAE,MAAM;YAAEC,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;UAAqC,CAA9D;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAA3B;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKJ,KAAK,CACDQ,MADJ,CACWC,CAAC,IAAIA,CAAC,IAAIH,qBAAL,IAA8BG,CAAC,IAAIF,sBADnD,EAEIG,GAFJ,CAEQD,CAAC,IAAI;QACN,oBAAO;UAAA,uBAAK;YAAc,SAAS,EAAEf,WAAW,KAAKe,CAAhB,GAAoBnB,CAAC,CAACqB,YAAtB,GAAqCC,SAA9D;YACR,OAAO,EAAGC,CAAD,IAAO;cAAElB,aAAa,CAACc,CAAD,CAAb;YAAmB,CAD7B;YAAA,WACgCA,CADhC;UAAA,GAAWA,CAAX;YAAA;YAAA;YAAA;UAAA;QAAL;UAAA;UAAA;UAAA;QAAA,QAAP;MAEH,CALJ,CAFL,eAQI;QAAA,UAAMN,YAAY,GAAGC,aAAf,iBAAgC;UAAQ,OAAO,EAAE,MAAM;YAAEC,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;UAAqC,CAA9D;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAtC;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADG;IAAA;IAAA;IAAA;EAAA,QAAP;AAYH,CAzBD;;GAAMb,S;;KAAAA,S;AA2BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}